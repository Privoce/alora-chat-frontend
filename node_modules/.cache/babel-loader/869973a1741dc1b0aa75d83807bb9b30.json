{"ast":null,"code":"import { POST_MESSAGE, POST_MESSAGE_RECEIVED, GET_MESSAGES, GET_MESSAGES_RECEIVED, DELETE_MESSAGE, DELETE_MESSAGE_RECEIVED } from \"redux/constants/message\";\nimport { RESET } from \"redux/constants/main\";\nvar initialState = {\n  teste: \"workando\"\n};\nexport default function messageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POST_MESSAGE:\n      return Object.assign({}, state, {\n        postMessage: Object.assign({}, state.postMessage, {\n          isFetching: true\n        })\n      });\n\n    case POST_MESSAGE_RECEIVED:\n      return Object.assign({}, state, {\n        postMessage: Object.assign({}, state.postMessage, {\n          isFetching: false\n        })\n      });\n\n    case GET_MESSAGES:\n      return Object.assign({}, state, {\n        getMessages: Object.assign({}, state.getMessages, {\n          isFetching: true\n        })\n      });\n\n    case GET_MESSAGES_RECEIVED:\n      return Object.assign({}, state, {\n        getMessages: Object.assign({}, state.getMessages, {\n          isFetching: false\n        })\n      });\n\n    case DELETE_MESSAGE:\n      return Object.assign({}, state, {\n        deleteMessage: Object.assign({}, state.deleteMessage, {\n          isFetching: true,\n          currentMessageIdIsDeleting: action.params.messageId\n        })\n      });\n\n    case DELETE_MESSAGE_RECEIVED:\n      return Object.assign({}, state, {\n        deleteMessage: Object.assign({}, state.deleteMessage, {\n          isFetching: false,\n          currentMessageIdIsDeleting: null\n        })\n      });\n\n    case RESET:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/redux/reducers/videoCall/index.js"],"names":["POST_MESSAGE","POST_MESSAGE_RECEIVED","GET_MESSAGES","GET_MESSAGES_RECEIVED","DELETE_MESSAGE","DELETE_MESSAGE_RECEIVED","RESET","initialState","teste","messageReducer","state","action","type","Object","assign","postMessage","isFetching","getMessages","deleteMessage","currentMessageIdIsDeleting","params","messageId"],"mappings":"AAAA,SACCA,YADD,EAECC,qBAFD,EAGCC,YAHD,EAICC,qBAJD,EAKCC,cALD,EAMCC,uBAND,QAOO,yBAPP;AASA,SAASC,KAAT,QAAsB,sBAAtB;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAIA,eAAe,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACpE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKZ,YAAL;AACC,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BK,QAAAA,WAAW,EAAEF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACK,WAAxB,EAAqC;AACjDC,UAAAA,UAAU,EAAE;AADqC,SAArC;AADkB,OAAzB,CAAP;;AAMD,SAAKf,qBAAL;AACC,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BK,QAAAA,WAAW,EAAEF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACK,WAAxB,EAAqC;AACjDC,UAAAA,UAAU,EAAE;AADqC,SAArC;AADkB,OAAzB,CAAP;;AAMD,SAAKd,YAAL;AACC,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BO,QAAAA,WAAW,EAAEJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACO,WAAxB,EAAqC;AACjDD,UAAAA,UAAU,EAAE;AADqC,SAArC;AADkB,OAAzB,CAAP;;AAMD,SAAKb,qBAAL;AACC,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BO,QAAAA,WAAW,EAAEJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACO,WAAxB,EAAqC;AACjDD,UAAAA,UAAU,EAAE;AADqC,SAArC;AADkB,OAAzB,CAAP;;AAMD,SAAKZ,cAAL;AACC,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BQ,QAAAA,aAAa,EAAEL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACQ,aAAxB,EAAuC;AACrDF,UAAAA,UAAU,EAAE,IADyC;AAErDG,UAAAA,0BAA0B,EAAER,MAAM,CAACS,MAAP,CAAcC;AAFW,SAAvC;AADgB,OAAzB,CAAP;;AAOD,SAAKhB,uBAAL;AACC,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BQ,QAAAA,aAAa,EAAEL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACQ,aAAxB,EAAuC;AACrDF,UAAAA,UAAU,EAAE,KADyC;AAErDG,UAAAA,0BAA0B,EAAE;AAFyB,SAAvC;AADgB,OAAzB,CAAP;;AAOD,SAAKb,KAAL;AACC,aAAOC,YAAP;;AAED;AACC,aAAOG,KAAP;AAjDF;AAmDA","sourcesContent":["import {\n\tPOST_MESSAGE,\n\tPOST_MESSAGE_RECEIVED,\n\tGET_MESSAGES,\n\tGET_MESSAGES_RECEIVED,\n\tDELETE_MESSAGE,\n\tDELETE_MESSAGE_RECEIVED\n} from \"redux/constants/message\";\n\nimport { RESET } from \"redux/constants/main\";\n\nconst initialState = {\n\tteste: \"workando\"\n};\n\nexport default function messageReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase POST_MESSAGE:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tpostMessage: Object.assign({}, state.postMessage, {\n\t\t\t\t\tisFetching: true\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase POST_MESSAGE_RECEIVED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tpostMessage: Object.assign({}, state.postMessage, {\n\t\t\t\t\tisFetching: false\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase GET_MESSAGES:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tgetMessages: Object.assign({}, state.getMessages, {\n\t\t\t\t\tisFetching: true\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase GET_MESSAGES_RECEIVED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tgetMessages: Object.assign({}, state.getMessages, {\n\t\t\t\t\tisFetching: false\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase DELETE_MESSAGE:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tdeleteMessage: Object.assign({}, state.deleteMessage, {\n\t\t\t\t\tisFetching: true,\n\t\t\t\t\tcurrentMessageIdIsDeleting: action.params.messageId\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase DELETE_MESSAGE_RECEIVED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tdeleteMessage: Object.assign({}, state.deleteMessage, {\n\t\t\t\t\tisFetching: false,\n\t\t\t\t\tcurrentMessageIdIsDeleting: null\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase RESET:\n\t\t\treturn initialState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}