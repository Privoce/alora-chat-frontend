{"ast":null,"code":"import _regeneratorRuntime from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/index.jsx\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { ActionsWrapper, ChatWrapper } from 'entries/chat/wrappers';\nimport { CallWindowComponent } from 'shared/components';\nimport PeerConnection from 'modules/utils/PeerConnection';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport constants from 'modules/constants';\nimport io from 'socket.io-client';\nimport * as socketActions from 'redux/actions/socket';\nimport * as videoCallActions from 'redux/actions/videoCall';\n\nvar HomeEntry =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomeEntry, _Component);\n\n  function HomeEntry() {\n    var _this;\n\n    _classCallCheck(this, HomeEntry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomeEntry).call(this));\n    _this.handleListern =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.connectSocket();\n\n            case 2:\n              _this.socket = _context.sent;\n              console.log(_this.socket);\n\n              _this.socket.on('videocall.calling', function (data) {\n                alert('callado pow');\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleCallStart = function () {\n      var conversationData = _this.props.conversationData;\n      var currentPartnerIdConversation = conversationData.currentPartnerIdConversation;\n      var config = {\n        audio: true,\n        video: true\n      };\n\n      _this.startCall(true, currentPartnerIdConversation, config);\n    };\n\n    _this.handleAceptCall = function () {\n      var conversationData = _this.props.conversationData;\n      var currentPartnerIdConversation = conversationData.currentPartnerIdConversation;\n      var config = {\n        audio: true,\n        video: true\n      };\n\n      _this.startCall(false, currentPartnerIdConversation, config);\n\n      var videoCallActions = _this.props.videoCallActions;\n      videoCallActions.acceptedVideoCall();\n    };\n\n    _this.handleCancelCall = function () {};\n\n    _this.state = {\n      clientId: '',\n      callWindow: '',\n      callModal: '',\n      callFrom: '',\n      localSrc: null,\n      peerSrc: null\n    };\n    _this.pc = {};\n    _this.config = null;\n    _this.startCallHandler = _this.startCall.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HomeEntry, [{\n    key: \"connectSocket\",\n    value: function connectSocket() {\n      var socket = io(constants.API.ROOT);\n      return new Promise(function (resolve) {\n        socket.on('connect', function () {\n          resolve(socket);\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var socketActions = this.props.socketActions;\n      this.socket = io(constants.API.ROOT);\n      this.handleListern();\n      this.socket.on('call', function (data) {\n        alert('callado pow');\n\n        if (data.sdp) {\n          alert('tem tbm');\n\n          _this2.pc.setRemoteDescription(data.sdp);\n\n          if (data.sdp.type === 'offer') _this2.pc.createAnswer();\n        } else _this2.pc.addIceCandidate(data.candidate);\n      });\n      socketActions.startChannel();\n    }\n  }, {\n    key: \"startCall\",\n    value: function startCall(isCaller, friendID, config) {\n      var _this3 = this;\n\n      this.config = config;\n      this.pc = new PeerConnection(friendID).on('localStream', function (src) {\n        var newState = {\n          callWindow: 'active',\n          localSrc: src\n        };\n        if (!isCaller) newState.callModal = '';\n\n        _this3.setState(newState);\n      }).on('peerStream', function (src) {\n        alert('start2');\n\n        _this3.setState({\n          peerSrc: src\n        });\n      }).start(isCaller, config);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var videoCallData = this.props.videoCallData;\n      var calling = videoCallData.calling;\n      var _this$state = this.state,\n          localSrc = _this$state.localSrc,\n          peerSrc = _this$state.peerSrc;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"chat-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, calling && React.createElement(\"div\", {\n        className: \"call-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Tem algu\\xE9m ligando\"), React.createElement(\"button\", {\n        onClick: this.handleAceptCall,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"aceitar\"), React.createElement(\"button\", {\n        onClick: this.handleCancelCall,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"cancelar\")), React.createElement(ActionsWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(ChatWrapper, {\n        startCall: this.handleCallStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), !_.isEmpty(this.config) && React.createElement(CallWindowComponent, {\n        status: \"calling\",\n        localSrc: localSrc,\n        peerSrc: peerSrc,\n        config: this.config,\n        mediaDevice: this.pc.mediaDevice,\n        endCall: this.endCallHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return HomeEntry;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    socketActions: bindActionCreators(socketActions, dispatch),\n    videoCallActions: bindActionCreators(videoCallActions, dispatch)\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    videoCallData: state.videoCall,\n    conversationData: state.conversation\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeEntry);","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/index.jsx"],"names":["React","Component","_","ActionsWrapper","ChatWrapper","CallWindowComponent","PeerConnection","connect","bindActionCreators","constants","io","socketActions","videoCallActions","HomeEntry","handleListern","connectSocket","socket","console","log","on","data","alert","handleCallStart","conversationData","props","currentPartnerIdConversation","config","audio","video","startCall","handleAceptCall","acceptedVideoCall","handleCancelCall","state","clientId","callWindow","callModal","callFrom","localSrc","peerSrc","pc","startCallHandler","bind","API","ROOT","Promise","resolve","sdp","setRemoteDescription","type","createAnswer","addIceCandidate","candidate","startChannel","isCaller","friendID","src","newState","setState","start","videoCallData","calling","isEmpty","mediaDevice","endCallHandler","mapDispatchToProps","dispatch","mapStateToProps","videoCall","conversation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport { ActionsWrapper, ChatWrapper } from 'entries/chat/wrappers';\nimport { CallWindowComponent } from 'shared/components';\n\nimport PeerConnection from 'modules/utils/PeerConnection';\n\nimport { connect } from 'react-redux';\n\nimport { bindActionCreators } from 'redux';\n\nimport constants from 'modules/constants';\nimport io from 'socket.io-client';\n\nimport * as socketActions from 'redux/actions/socket';\nimport * as videoCallActions from 'redux/actions/videoCall';\n\nclass HomeEntry extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tclientId: '',\n\t\t\tcallWindow: '',\n\t\t\tcallModal: '',\n\t\t\tcallFrom: '',\n\t\t\tlocalSrc: null,\n\t\t\tpeerSrc: null\n\t\t};\n\t\tthis.pc = {};\n\t\tthis.config = null;\n\t\tthis.startCallHandler = this.startCall.bind(this);\n\t}\n\n\tconnectSocket() {\n\t\tconst socket = io(constants.API.ROOT);\n\t\treturn new Promise(resolve => {\n\t\t\tsocket.on('connect', () => {\n\t\t\t\tresolve(socket);\n\t\t\t});\n\t\t});\n\t}\n\n\thandleListern = async () => {\n\t\tthis.socket = await this.connectSocket();\n\t\tconsole.log(this.socket);\n\t\tthis.socket.on('videocall.calling', data => {\n\t\t\talert('callado pow');\n\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\tconst { socketActions } = this.props;\n\t\tthis.socket = io(constants.API.ROOT);\n\n\t\tthis.handleListern();\n\n\t\tthis.socket.on('call', data => {\n\t\t\talert('callado pow');\n\t\t\tif (data.sdp) {\n\t\t\t\talert('tem tbm');\n\t\t\t\tthis.pc.setRemoteDescription(data.sdp);\n\t\t\t\tif (data.sdp.type === 'offer') this.pc.createAnswer();\n\t\t\t} else this.pc.addIceCandidate(data.candidate);\n\t\t});\n\n\t\tsocketActions.startChannel();\n\t}\n\n\tstartCall(isCaller, friendID, config) {\n\t\tthis.config = config;\n\t\tthis.pc = new PeerConnection(friendID)\n\t\t\t.on('localStream', src => {\n\t\t\t\tconst newState = { callWindow: 'active', localSrc: src };\n\t\t\t\tif (!isCaller) newState.callModal = '';\n\t\t\t\tthis.setState(newState);\n\t\t\t})\n\t\t\t.on('peerStream', src => {\n\t\t\t\talert('start2');\n\t\t\t\tthis.setState({ peerSrc: src });\n\t\t\t})\n\t\t\t.start(isCaller, config);\n\t}\n\n\thandleCallStart = () => {\n\t\tconst { conversationData } = this.props;\n\t\tconst { currentPartnerIdConversation } = conversationData;\n\t\tconst config = { audio: true, video: true };\n\t\tthis.startCall(true, currentPartnerIdConversation, config);\n\t};\n\n\thandleAceptCall = () => {\n\t\tconst { conversationData } = this.props;\n\t\tconst { currentPartnerIdConversation } = conversationData;\n\t\tconst config = { audio: true, video: true };\n\t\tthis.startCall(false, currentPartnerIdConversation, config);\n\t\tconst { videoCallActions } = this.props;\n\n\t\tvideoCallActions.acceptedVideoCall();\n\t};\n\n\thandleCancelCall = () => {};\n\n\trender() {\n\t\tconst { videoCallData } = this.props;\n\t\tconst { calling } = videoCallData;\n\t\tconst { localSrc, peerSrc } = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"chat-wrapper\">\n\t\t\t\t\t{calling && (\n\t\t\t\t\t\t<div className=\"call-container\">\n\t\t\t\t\t\t\t<p>Tem alguém ligando</p>\n\t\t\t\t\t\t\t<button onClick={this.handleAceptCall}>\n\t\t\t\t\t\t\t\taceitar\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button onClick={this.handleCancelCall}>\n\t\t\t\t\t\t\t\tcancelar\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<ActionsWrapper />\n\t\t\t\t\t<ChatWrapper startCall={this.handleCallStart} />\n\t\t\t\t</div>\n\t\t\t\t{!_.isEmpty(this.config) && (\n\t\t\t\t\t<CallWindowComponent\n\t\t\t\t\t\tstatus=\"calling\"\n\t\t\t\t\t\tlocalSrc={localSrc}\n\t\t\t\t\t\tpeerSrc={peerSrc}\n\t\t\t\t\t\tconfig={this.config}\n\t\t\t\t\t\tmediaDevice={this.pc.mediaDevice}\n\t\t\t\t\t\tendCall={this.endCallHandler}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsocketActions: bindActionCreators(socketActions, dispatch),\n\t\tvideoCallActions: bindActionCreators(videoCallActions, dispatch)\n\t};\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tvideoCallData: state.videoCall,\n\t\tconversationData: state.conversation\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(HomeEntry);\n"]},"metadata":{},"sourceType":"module"}