{"ast":null,"code":"import _classCallCheck from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/containers/add-contact-drawer/index.jsx\";\nimport React, { Component } from 'react';\nimport { InputComponent, ButtonComponent, FormComponent, FlashMessageComponent } from 'shared/components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport constants from 'modules/constants';\nimport * as contactActions from 'redux/actions/contact';\n\nvar AddContactDrawer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddContactDrawer, _Component);\n\n  function AddContactDrawer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddContactDrawer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddContactDrawer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onCloseFlashMessage = function () {\n      var contactActions = _this.props.contactActions;\n      var resetAddContact = contactActions.resetAddContact;\n      resetAddContact();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddContactDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          contactActions = _this$props.contactActions,\n          contactData = _this$props.contactData;\n      var addContact = contactData.addContact;\n      var successMessages = addContact.successMessages;\n      var errors = addContact.errors;\n      return React.createElement(\"div\", {\n        className: \"add-contact-drawer-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(FormComponent, {\n        formName: \"AddContactForm\",\n        values: {\n          nickname: ''\n        },\n        handleSubmit: function handleSubmit(values) {\n          if (!addContact.isFetching) {\n            var params = {\n              body: values\n            };\n            contactActions.postAddContact(params);\n          }\n        },\n        render: function render(_ref) {\n          var handleChange = _ref.handleChange,\n              handleSubmit = _ref.handleSubmit,\n              form = _ref.form;\n          var values = form.values;\n          return React.createElement(\"form\", {\n            onSubmit: handleSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, successMessages.nickname ? React.createElement(FlashMessageComponent, {\n            width: \"100%\",\n            message: successMessages.nickname,\n            margin: \"0px 0px 15px 0px\",\n            onClose: _this2.onCloseFlashMessage,\n            success: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }) : null, errors.nickname ? React.createElement(FlashMessageComponent, {\n            width: \"100%\",\n            message: errors.nickname,\n            margin: \"0px 0px 15px 0px\",\n            onClose: _this2.onCloseFlashMessage,\n            error: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }) : null, React.createElement(InputComponent, {\n            name: \"nickname\",\n            type: \"text\",\n            autoComplete: \"off\",\n            placeholder: constants.LABELS.AUTH.NICKNAME,\n            onChange: handleChange,\n            maxLength: 12,\n            defaultButton: true,\n            margin: \"0px 0px 15px 0px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }), React.createElement(ButtonComponent, {\n            type: \"submit\",\n            primary: true,\n            text: constants.LABELS.CHAT.ADD,\n            width: \"100%\",\n            disabled: !values.nickname,\n            isFetching: addContact.isFetching,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddContactDrawer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contactData: state.contact\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    contactActions: bindActionCreators(contactActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContactDrawer);","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/containers/add-contact-drawer/index.jsx"],"names":["React","Component","InputComponent","ButtonComponent","FormComponent","FlashMessageComponent","connect","bindActionCreators","constants","contactActions","AddContactDrawer","onCloseFlashMessage","props","resetAddContact","contactData","addContact","successMessages","errors","nickname","values","isFetching","params","body","postAddContact","handleChange","handleSubmit","form","LABELS","AUTH","NICKNAME","CHAT","ADD","mapStateToProps","state","contact","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {\n\tComponent\n} from 'react';\n\nimport {\n\tInputComponent,\n\tButtonComponent,\n\tFormComponent,\n\tFlashMessageComponent\n} from 'shared/components';\n\nimport {\n\tconnect\n} from 'react-redux';\n\nimport {\n\tbindActionCreators\n} from 'redux';\n\nimport constants from 'modules/constants';\nimport * as contactActions from 'redux/actions/contact';\n\nclass AddContactDrawer extends Component {\n\tonCloseFlashMessage = () => {\n\t\tconst {\n\t\t\tcontactActions\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tresetAddContact\n\t\t} = contactActions;\n\n\t\tresetAddContact();\n\t}\n\n\trender () {\n\t\tconst {\n\t\t\tcontactActions,\n\t\t\tcontactData\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\taddContact\n\t\t} = contactData;\n\n\t\tconst {\n\t\t\tsuccessMessages\n\t\t} = addContact;\n\n\t\tconst {\n\t\t\terrors\n\t\t} = addContact;\n\n\t\treturn (\n\t\t\t<div className='add-contact-drawer-wrapper'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='form-container'\n\t\t\t\t>\n\t\t\t\t\t<FormComponent\n\t\t\t\t\t\tformName='AddContactForm'\n\t\t\t\t\t\tvalues={{\n\t\t\t\t\t\t\tnickname: ''\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thandleSubmit={(values) => {\n\t\t\t\t\t\t\tif (!addContact.isFetching) {\n\t\t\t\t\t\t\t\tconst params = {\n\t\t\t\t\t\t\t\t\tbody: values\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tcontactActions.postAddContact(params);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trender={({\n\t\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\tform\n\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tvalues\n\t\t\t\t\t\t\t} = form;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tsuccessMessages.nickname ? (\n\t\t\t\t\t\t\t\t\t\t\t<FlashMessageComponent\n\t\t\t\t\t\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\t\t\t\t\t\tmessage={successMessages.nickname}\n\t\t\t\t\t\t\t\t\t\t\t\tmargin='0px 0px 15px 0px'\n\t\t\t\t\t\t\t\t\t\t\t\tonClose={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\terrors.nickname ? (\n\t\t\t\t\t\t\t\t\t\t\t<FlashMessageComponent\n\t\t\t\t\t\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\t\t\t\t\t\tmessage={errors.nickname}\n\t\t\t\t\t\t\t\t\t\t\t\tmargin='0px 0px 15px 0px'\n\t\t\t\t\t\t\t\t\t\t\t\tonClose={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<InputComponent\n\t\t\t\t\t\t\t\t\t\tname='nickname'\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\t\t\t\tplaceholder={constants.LABELS.AUTH.NICKNAME}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tmaxLength={12}\n\t\t\t\t\t\t\t\t\t\tdefaultButton\n\t\t\t\t\t\t\t\t\t\tmargin='0px 0px 15px 0px'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tprimary\n\t\t\t\t\t\t\t\t\t\ttext={constants.LABELS.CHAT.ADD}\n\t\t\t\t\t\t\t\t\t\twidth='100%'\n\t\t\t\t\t\t\t\t\t\tdisabled={!values.nickname}\n\t\t\t\t\t\t\t\t\t\tisFetching={addContact.isFetching}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcontactData: state.contact\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tcontactActions: bindActionCreators(contactActions, dispatch)\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(AddContactDrawer);\n"]},"metadata":{},"sourceType":"module"}