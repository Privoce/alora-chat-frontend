{"ast":null,"code":"import { SET_CURRENT_CONVERSATION, GET_CONVERSATIONS, GET_CONVERSATIONS_RECEIVED, SET_CURRENT_CONVERSATION_MESSAGES, ADD_MESSAGE_TO_CURRENT_CONVERSATION_MESSAGES, INCREMENT_CONVERSATION_UNREAD_MESSAGES, RESET_CONVERSATION_UNREAD_MESSAGES, DELETE_CONVERSATION_RECEIVED, DELETE_CONVERSATION, REMOVE_CONVERSATION, REMOVE_MESSAGE_FROM_CONVERSATION } from 'redux/constants/conversation';\nimport { RESET } from 'redux/constants/main';\nvar initialState = {\n  isFetching: false,\n  currentPartnerIdConversation: null,\n  result: [],\n  deleteConversation: {\n    isFetching: false,\n    currentPartnerIdIsDeleting: null\n  }\n};\nexport default function conversationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var setNewConversationToResult = function setNewConversationToResult() {\n    return state.result.find(function (item) {\n      return String(item.partnerId._id) === String(action.params.partner._id);\n    }) ? state.result : state.result.concat([{\n      partnerId: action.params.partner,\n      messages: [],\n      unreadMessages: 0\n    }]);\n  };\n\n  switch (action.type) {\n    case SET_CURRENT_CONVERSATION:\n      return Object.assign({}, state, {\n        currentPartnerIdConversation: action.params.partner._id,\n        result: setNewConversationToResult()\n      });\n\n    case GET_CONVERSATIONS:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case GET_CONVERSATIONS_RECEIVED:\n      return Object.assign({}, state, {\n        isFetching: false,\n        result: action.params.result\n      });\n\n    case SET_CURRENT_CONVERSATION_MESSAGES:\n      return Object.assign({}, state, {\n        result: state.result.map(function (item) {\n          var newItem = item;\n          var partnerId = newItem.partnerId;\n          var params = action.params;\n\n          if (String(partnerId._id) === String(params.partnerId)) {\n            newItem.messages = params.result;\n          }\n\n          return newItem;\n        })\n      });\n\n    case ADD_MESSAGE_TO_CURRENT_CONVERSATION_MESSAGES:\n      return Object.assign({}, state, {\n        result: setNewConversationToResult().map(function (item) {\n          var newItem = item;\n          var partnerId = newItem.partnerId;\n          var params = action.params;\n          var message = params.message,\n              partner = params.partner;\n\n          if (String(partnerId._id) === String(partner._id)) {\n            newItem.messages = newItem.messages.concat(message);\n          }\n\n          return newItem;\n        })\n      });\n\n    case INCREMENT_CONVERSATION_UNREAD_MESSAGES:\n      return Object.assign({}, state, {\n        result: state.result.map(function (item) {\n          var newItem = item;\n          var partner = action.params.partner;\n\n          if (newItem.partnerId._id === partner._id) {\n            newItem.unreadMessages += 1;\n          }\n\n          return newItem;\n        })\n      });\n\n    case RESET_CONVERSATION_UNREAD_MESSAGES:\n      return Object.assign({}, state, {\n        result: state.result.map(function (item) {\n          var newItem = item;\n          var partner = action.params.partner;\n\n          if (newItem.partnerId._id === partner._id) {\n            newItem.unreadMessages = 0;\n          }\n\n          return newItem;\n        })\n      });\n\n    case DELETE_CONVERSATION:\n      return Object.assign({}, state, {\n        deleteConversation: Object.assign({}, state.deleteConversation, {\n          isFetching: true,\n          currentPartnerIdIsDeleting: action.params.partnerId\n        })\n      });\n\n    case DELETE_CONVERSATION_RECEIVED:\n      return Object.assign({}, state, {\n        deleteConversation: Object.assign({}, state.deleteConversation, {\n          isFetching: false,\n          currentPartnerIdIsDeleting: null\n        })\n      });\n\n    case REMOVE_CONVERSATION:\n      return Object.assign({}, state, {\n        result: state.result.filter(function (item) {\n          return String(item.partnerId._id) !== String(action.params.partnerId);\n        }),\n        currentPartnerIdConversation: String(state.currentPartnerIdConversation) === String(action.params.partnerId) ? null : state.currentPartnerIdConversation\n      });\n\n    case REMOVE_MESSAGE_FROM_CONVERSATION:\n      return Object.assign({}, state, {\n        result: state.result.map(function (item) {\n          var newItem = item;\n\n          if (String(item.partnerId._id) === String(action.params.partnerId)) {\n            newItem.messages = item.messages.filter(function (message) {\n              return message._id !== action.params.messageId;\n            });\n          }\n\n          return item;\n        })\n      });\n\n    case RESET:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/redux/reducers/conversation/index.js"],"names":["SET_CURRENT_CONVERSATION","GET_CONVERSATIONS","GET_CONVERSATIONS_RECEIVED","SET_CURRENT_CONVERSATION_MESSAGES","ADD_MESSAGE_TO_CURRENT_CONVERSATION_MESSAGES","INCREMENT_CONVERSATION_UNREAD_MESSAGES","RESET_CONVERSATION_UNREAD_MESSAGES","DELETE_CONVERSATION_RECEIVED","DELETE_CONVERSATION","REMOVE_CONVERSATION","REMOVE_MESSAGE_FROM_CONVERSATION","RESET","initialState","isFetching","currentPartnerIdConversation","result","deleteConversation","currentPartnerIdIsDeleting","conversationReducer","state","action","setNewConversationToResult","find","item","String","partnerId","_id","params","partner","concat","messages","unreadMessages","type","Object","assign","map","newItem","message","filter","messageId"],"mappings":"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","sourcesContent":["import {\n\tSET_CURRENT_CONVERSATION,\n\tGET_CONVERSATIONS,\n\tGET_CONVERSATIONS_RECEIVED,\n\tSET_CURRENT_CONVERSATION_MESSAGES,\n\tADD_MESSAGE_TO_CURRENT_CONVERSATION_MESSAGES,\n\tINCREMENT_CONVERSATION_UNREAD_MESSAGES,\n\tRESET_CONVERSATION_UNREAD_MESSAGES,\n\tDELETE_CONVERSATION_RECEIVED,\n\tDELETE_CONVERSATION,\n\tREMOVE_CONVERSATION,\n\tREMOVE_MESSAGE_FROM_CONVERSATION\n} from 'redux/constants/conversation';\n\nimport {\n\tRESET\n} from 'redux/constants/main';\n\nconst initialState = {\n\tisFetching: false,\n\tcurrentPartnerIdConversation: null,\n\tresult: [],\n\tdeleteConversation: {\n\t\tisFetching: false,\n\t\tcurrentPartnerIdIsDeleting: null\n\t}\n};\n\nexport default function conversationReducer (state = initialState, action) {\n\tconst setNewConversationToResult = () => {\n\t\treturn state.result.find(item => String(item.partnerId._id) === String(action.params.partner._id))\n\t\t\t? state.result\n\t\t\t: state.result.concat([{\n\t\t\t\tpartnerId: action.params.partner,\n\t\t\t\tmessages: [],\n\t\t\t\tunreadMessages: 0\n\t\t\t}]);\n\t};\n\n\tswitch (action.type) {\n\t\tcase SET_CURRENT_CONVERSATION:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tcurrentPartnerIdConversation: action.params.partner._id,\n\t\t\t\tresult: setNewConversationToResult()\n\t\t\t});\n\n\t\tcase GET_CONVERSATIONS:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: true\n\t\t\t});\n\n\t\tcase GET_CONVERSATIONS_RECEIVED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tisFetching: false,\n\t\t\t\tresult: action.params.result\n\t\t\t});\n\n\t\tcase SET_CURRENT_CONVERSATION_MESSAGES:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tresult: state.result.map((item) => {\n\t\t\t\t\tconst newItem = item;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tpartnerId\n\t\t\t\t\t} = newItem;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tparams\n\t\t\t\t\t} = action;\n\n\t\t\t\t\tif (String(partnerId._id) === String(params.partnerId)) {\n\t\t\t\t\t\tnewItem.messages = params.result;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newItem;\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase ADD_MESSAGE_TO_CURRENT_CONVERSATION_MESSAGES:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tresult: setNewConversationToResult().map((item) => {\n\t\t\t\t\tconst newItem = item;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tpartnerId\n\t\t\t\t\t} = newItem;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tparams\n\t\t\t\t\t} = action;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tpartner\n\t\t\t\t\t} = params;\n\n\t\t\t\t\tif (String(partnerId._id) === String(partner._id)) {\n\t\t\t\t\t\tnewItem.messages = newItem.messages.concat(message);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newItem;\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase INCREMENT_CONVERSATION_UNREAD_MESSAGES:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tresult: state.result.map((item) => {\n\t\t\t\t\tconst newItem = item;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tpartner\n\t\t\t\t\t} = action.params;\n\n\t\t\t\t\tif (newItem.partnerId._id === partner._id) {\n\t\t\t\t\t\tnewItem.unreadMessages += 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newItem;\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase RESET_CONVERSATION_UNREAD_MESSAGES:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tresult: state.result.map((item) => {\n\t\t\t\t\tconst newItem = item;\n\t\t\t\t\tconst {\n\t\t\t\t\t\tpartner\n\t\t\t\t\t} = action.params;\n\n\t\t\t\t\tif (newItem.partnerId._id === partner._id) {\n\t\t\t\t\t\tnewItem.unreadMessages = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newItem;\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase DELETE_CONVERSATION:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tdeleteConversation: Object.assign({}, state.deleteConversation, {\n\t\t\t\t\tisFetching: true,\n\t\t\t\t\tcurrentPartnerIdIsDeleting: action.params.partnerId\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase DELETE_CONVERSATION_RECEIVED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tdeleteConversation: Object.assign({}, state.deleteConversation, {\n\t\t\t\t\tisFetching: false,\n\t\t\t\t\tcurrentPartnerIdIsDeleting: null\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase REMOVE_CONVERSATION:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tresult: state.result.filter(item => String(item.partnerId._id) !== String(action.params.partnerId)),\n\t\t\t\tcurrentPartnerIdConversation: (\n\t\t\t\t\tString(state.currentPartnerIdConversation) === String(action.params.partnerId)\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: state.currentPartnerIdConversation\n\t\t\t\t)\n\t\t\t});\n\n\t\tcase REMOVE_MESSAGE_FROM_CONVERSATION:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tresult: state.result.map(item => {\n\t\t\t\t\tconst newItem = item;\n\t\t\t\t\tif (String(item.partnerId._id) === String(action.params.partnerId)) {\n\t\t\t\t\t\tnewItem.messages = item.messages.filter(message => message._id !== action.params.messageId);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn item;\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase RESET:\n\t\t\treturn initialState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}