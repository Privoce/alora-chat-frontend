{"ast":null,"code":"import _classCallCheck from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/wrappers/chat/index.jsx\";\nimport React, { Component } from \"react\";\nimport { ContentEditableComponent, IconComponent, LabelComponent, ButtonComponent } from \"shared/components\";\nimport { UserInfoComponent } from \"entries/chat/components\";\nimport { MessageListContainer } from \"entries/chat/containers\";\nimport { connect } from \"react-redux\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { bindActionCreators } from \"redux\";\nimport constants from \"modules/constants\";\nimport * as conversationActions from \"redux/actions/conversation\";\nimport * as messageActions from \"redux/actions/message\";\n\nvar ChatWrapper =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatWrapper, _Component);\n\n  function ChatWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, ChatWrapper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatWrapper).call(this, props));\n\n    _this.setConversationIsRead = function () {\n      var _this$props = _this.props,\n          conversationData = _this$props.conversationData,\n          conversationActions = _this$props.conversationActions;\n      var resetConversationUnreadMessages = conversationActions.resetConversationUnreadMessages;\n      var currentPartnerIdConversation = conversationData.currentPartnerIdConversation,\n          conversations = conversationData.result;\n      var currentConversation = conversations.find(function (item) {\n        return String(item.partnerId._id) === String(currentPartnerIdConversation);\n      });\n      var partnerId = currentConversation.partnerId,\n          unreadMessages = currentConversation.unreadMessages;\n\n      if (unreadMessages > 0) {\n        resetConversationUnreadMessages({\n          partner: partnerId\n        });\n      }\n    };\n\n    _this.handleSendMessage = function (message) {\n      if (message) {\n        var _this$props2 = _this.props,\n            conversationData = _this$props2.conversationData,\n            _messageActions = _this$props2.messageActions;\n        var currentPartnerIdConversation = conversationData.currentPartnerIdConversation;\n        var params = {\n          body: {\n            message: message,\n            receiverId: currentPartnerIdConversation\n          }\n        };\n\n        _messageActions.postMessage(params);\n      }\n    };\n\n    _this.handleDeleteMessage = function (messageId) {\n      var _this$props3 = _this.props,\n          messageActions = _this$props3.messageActions,\n          conversationData = _this$props3.conversationData;\n      var partnerId = conversationData.currentPartnerIdConversation;\n      confirmAlert({\n        customUI: function customUI(_ref) {\n          var onClose = _ref.onClose;\n          return React.createElement(\"div\", {\n            className: \"confirm-popup\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(LabelComponent, {\n            fontSemiBold: true,\n            text: constants.LABELS.CHAT.DELETE_MESSAGE_CONFIRM,\n            fontSize: 30,\n            alignCenter: true,\n            margin: \"0px 0px 25px 0px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"buttons-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(ButtonComponent, {\n            type: \"button\",\n            defaultButton: true,\n            small: true,\n            outline: true,\n            text: constants.LABELS.MAIN.NO,\n            margin: \"10px\",\n            width: 100,\n            onClick: onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }), React.createElement(ButtonComponent, {\n            type: \"button\",\n            defaultButton: true,\n            small: true,\n            outline: true,\n            text: constants.LABELS.MAIN.YES,\n            margin: \"10px\",\n            width: 100,\n            onClick: function onClick() {\n              messageActions.deleteMessage({\n                messageId: messageId,\n                partnerId: partnerId\n              });\n              onClose();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          })));\n        }\n      });\n    };\n\n    _this.getCurrentConversationMessages = function (messages) {\n      var messageData = _this.props.messageData;\n      var deleteMessage = messageData.deleteMessage;\n      return messages.map(function (message) {\n        var newItem = message;\n        newItem.isFetchingAction = deleteMessage.isFetching && String(deleteMessage.currentMessageIdIsDeleting) === String(message._id);\n        return message;\n      });\n    };\n\n    _this.renderChatContainer = function () {\n      var _this$props4 = _this.props,\n          conversationData = _this$props4.conversationData,\n          messageData = _this$props4.messageData;\n      var getMessages = messageData.getMessages;\n      var currentPartnerIdConversation = conversationData.currentPartnerIdConversation,\n          conversations = conversationData.result;\n\n      if (!currentPartnerIdConversation) {\n        return React.createElement(\"div\", {\n          className: \"empty-message-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(IconComponent, {\n          icon: \"chat-emoji\",\n          width: 200,\n          height: 200,\n          margin: \"0px 0px 25px 20px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }));\n      }\n\n      var currentConversation = conversations.find(function (item) {\n        return String(item.partnerId._id) === String(currentPartnerIdConversation);\n      });\n      var _currentConversation$ = currentConversation.partnerId,\n          nickname = _currentConversation$.nickname,\n          profileColor = _currentConversation$.profileColor;\n      return React.createElement(\"div\", {\n        className: \"chat-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(UserInfoComponent, {\n        isFetching: false,\n        sketchDark: true,\n        profile: {\n          label: nickname,\n          width: 40,\n          height: 40,\n          backgroundColor: profileColor,\n          color: \"white\",\n          labelFontSize: 14\n        },\n        title: {\n          text: nickname,\n          fontSize: 13,\n          margin: \"0px 0px 0px 14px\"\n        },\n        desc: {\n          text: \"asdas\",\n          fontSize: 13,\n          maxWidth: 100,\n          margin: \"0px 0px 0px 14px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        ref: _this.conversationContainer,\n        className: \"conversation-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(MessageListContainer, {\n        isFetching: getMessages.isFetching,\n        items: _this.getCurrentConversationMessages(currentConversation.messages),\n        onMouseOver: _this.setConversationIsRead,\n        onFocus: _this.setConversationIsRead,\n        handleDeleteMessage: _this.handleDeleteMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(\"footer\", {\n        className: \"footer-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(ContentEditableComponent, {\n        onEnter: _this.handleSendMessage,\n        onFocus: _this.setConversationIsRead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return alert(\"oi\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Video\")));\n    };\n\n    _this.conversationContainer = React.createRef();\n    return _this;\n  }\n\n  _createClass(ChatWrapper, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var current = this.conversationContainer.current;\n\n      if (current) {\n        current.scrollTop = current.scrollHeight;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chat-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, this.renderChatContainer());\n    }\n  }]);\n\n  return ChatWrapper;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    conversationData: state.conversation,\n    messageData: state.message\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    conversationActions: bindActionCreators(conversationActions, dispatch),\n    messageActions: bindActionCreators(messageActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatWrapper);","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/wrappers/chat/index.jsx"],"names":["React","Component","ContentEditableComponent","IconComponent","LabelComponent","ButtonComponent","UserInfoComponent","MessageListContainer","connect","confirmAlert","bindActionCreators","constants","conversationActions","messageActions","ChatWrapper","props","setConversationIsRead","conversationData","resetConversationUnreadMessages","currentPartnerIdConversation","conversations","result","currentConversation","find","item","String","partnerId","_id","unreadMessages","partner","handleSendMessage","message","params","body","receiverId","postMessage","handleDeleteMessage","messageId","customUI","onClose","LABELS","CHAT","DELETE_MESSAGE_CONFIRM","MAIN","NO","YES","deleteMessage","getCurrentConversationMessages","messages","messageData","map","newItem","isFetchingAction","isFetching","currentMessageIdIsDeleting","renderChatContainer","getMessages","nickname","profileColor","label","width","height","backgroundColor","color","labelFontSize","text","fontSize","margin","maxWidth","conversationContainer","alert","createRef","current","scrollTop","scrollHeight","mapStateToProps","state","conversation","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n\tContentEditableComponent,\n\tIconComponent,\n\tLabelComponent,\n\tButtonComponent\n} from \"shared/components\";\n\nimport { UserInfoComponent } from \"entries/chat/components\";\n\nimport { MessageListContainer } from \"entries/chat/containers\";\n\nimport { connect } from \"react-redux\";\n\nimport { confirmAlert } from \"react-confirm-alert\";\n\nimport { bindActionCreators } from \"redux\";\n\nimport constants from \"modules/constants\";\nimport * as conversationActions from \"redux/actions/conversation\";\nimport * as messageActions from \"redux/actions/message\";\n\nclass ChatWrapper extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.conversationContainer = React.createRef();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconst { current } = this.conversationContainer;\n\n\t\tif (current) {\n\t\t\tcurrent.scrollTop = current.scrollHeight;\n\t\t}\n\t}\n\n\tsetConversationIsRead = () => {\n\t\tconst { conversationData, conversationActions } = this.props;\n\n\t\tconst { resetConversationUnreadMessages } = conversationActions;\n\n\t\tconst {\n\t\t\tcurrentPartnerIdConversation,\n\t\t\tresult: conversations\n\t\t} = conversationData;\n\n\t\tconst currentConversation = conversations.find(\n\t\t\titem =>\n\t\t\t\tString(item.partnerId._id) ===\n\t\t\t\tString(currentPartnerIdConversation)\n\t\t);\n\n\t\tconst { partnerId, unreadMessages } = currentConversation;\n\n\t\tif (unreadMessages > 0) {\n\t\t\tresetConversationUnreadMessages({\n\t\t\t\tpartner: partnerId\n\t\t\t});\n\t\t}\n\t};\n\n\thandleSendMessage = message => {\n\t\tif (message) {\n\t\t\tconst { conversationData, messageActions } = this.props;\n\n\t\t\tconst { currentPartnerIdConversation } = conversationData;\n\n\t\t\tconst params = {\n\t\t\t\tbody: {\n\t\t\t\t\tmessage,\n\t\t\t\t\treceiverId: currentPartnerIdConversation\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmessageActions.postMessage(params);\n\t\t}\n\t};\n\n\thandleDeleteMessage = messageId => {\n\t\tconst { messageActions, conversationData } = this.props;\n\n\t\tconst { currentPartnerIdConversation: partnerId } = conversationData;\n\n\t\tconfirmAlert({\n\t\t\tcustomUI: ({ onClose }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"confirm-popup\">\n\t\t\t\t\t\t<LabelComponent\n\t\t\t\t\t\t\tfontSemiBold\n\t\t\t\t\t\t\ttext={constants.LABELS.CHAT.DELETE_MESSAGE_CONFIRM}\n\t\t\t\t\t\t\tfontSize={30}\n\t\t\t\t\t\t\talignCenter\n\t\t\t\t\t\t\tmargin=\"0px 0px 25px 0px\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"buttons-container\">\n\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tdefaultButton\n\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\ttext={constants.LABELS.MAIN.NO}\n\t\t\t\t\t\t\t\tmargin=\"10px\"\n\t\t\t\t\t\t\t\twidth={100}\n\t\t\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tdefaultButton\n\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\ttext={constants.LABELS.MAIN.YES}\n\t\t\t\t\t\t\t\tmargin=\"10px\"\n\t\t\t\t\t\t\t\twidth={100}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tmessageActions.deleteMessage({\n\t\t\t\t\t\t\t\t\t\tmessageId,\n\t\t\t\t\t\t\t\t\t\tpartnerId\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t};\n\n\tgetCurrentConversationMessages = messages => {\n\t\tconst { messageData } = this.props;\n\n\t\tconst { deleteMessage } = messageData;\n\n\t\treturn messages.map(message => {\n\t\t\tconst newItem = message;\n\t\t\tnewItem.isFetchingAction =\n\t\t\t\tdeleteMessage.isFetching &&\n\t\t\t\tString(deleteMessage.currentMessageIdIsDeleting) ===\n\t\t\t\t\tString(message._id);\n\t\t\treturn message;\n\t\t});\n\t};\n\n\trenderChatContainer = () => {\n\t\tconst { conversationData, messageData } = this.props;\n\n\t\tconst { getMessages } = messageData;\n\n\t\tconst {\n\t\t\tcurrentPartnerIdConversation,\n\t\t\tresult: conversations\n\t\t} = conversationData;\n\n\t\tif (!currentPartnerIdConversation) {\n\t\t\treturn (\n\t\t\t\t<div className=\"empty-message-container\">\n\t\t\t\t\t<IconComponent\n\t\t\t\t\t\ticon=\"chat-emoji\"\n\t\t\t\t\t\twidth={200}\n\t\t\t\t\t\theight={200}\n\t\t\t\t\t\tmargin=\"0px 0px 25px 20px\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst currentConversation = conversations.find(\n\t\t\titem =>\n\t\t\t\tString(item.partnerId._id) ===\n\t\t\t\tString(currentPartnerIdConversation)\n\t\t);\n\n\t\tconst { nickname, profileColor } = currentConversation.partnerId;\n\n\t\treturn (\n\t\t\t<div className=\"chat-content\">\n\t\t\t\t<header className=\"header-container\">\n\t\t\t\t\t<UserInfoComponent\n\t\t\t\t\t\tisFetching={false}\n\t\t\t\t\t\tsketchDark\n\t\t\t\t\t\tprofile={{\n\t\t\t\t\t\t\tlabel: nickname,\n\t\t\t\t\t\t\twidth: 40,\n\t\t\t\t\t\t\theight: 40,\n\t\t\t\t\t\t\tbackgroundColor: profileColor,\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tlabelFontSize: 14\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttitle={{\n\t\t\t\t\t\t\ttext: nickname,\n\t\t\t\t\t\t\tfontSize: 13,\n\t\t\t\t\t\t\tmargin: \"0px 0px 0px 14px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdesc={{\n\t\t\t\t\t\t\ttext: \"asdas\",\n\t\t\t\t\t\t\tfontSize: 13,\n\t\t\t\t\t\t\tmaxWidth: 100,\n\t\t\t\t\t\t\tmargin: \"0px 0px 0px 14px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</header>\n\t\t\t\t<section\n\t\t\t\t\tref={this.conversationContainer}\n\t\t\t\t\tclassName=\"conversation-container\"\n\t\t\t\t>\n\t\t\t\t\t<MessageListContainer\n\t\t\t\t\t\tisFetching={getMessages.isFetching}\n\t\t\t\t\t\titems={this.getCurrentConversationMessages(\n\t\t\t\t\t\t\tcurrentConversation.messages\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonMouseOver={this.setConversationIsRead}\n\t\t\t\t\t\tonFocus={this.setConversationIsRead}\n\t\t\t\t\t\thandleDeleteMessage={this.handleDeleteMessage}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t\t<footer className=\"footer-container\">\n\t\t\t\t\t<ContentEditableComponent\n\t\t\t\t\t\tonEnter={this.handleSendMessage}\n\t\t\t\t\t\tonFocus={this.setConversationIsRead}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={() => alert(\"oi\")}>Video</button>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"chat-container\">{this.renderChatContainer()}</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tconversationData: state.conversation,\n\t\tmessageData: state.message\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tconversationActions: bindActionCreators(conversationActions, dispatch),\n\t\tmessageActions: bindActionCreators(messageActions, dispatch)\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ChatWrapper);\n"]},"metadata":{},"sourceType":"module"}