{"ast":null,"code":"import _objectSpread from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { POST_ADD_CONTACT, POST_ADD_CONTACT_RECEIVED, RESET_ADD_CONTACT, GET_CONTACTS, GET_CONTACTS_RECEIVED, RESET_GET_CONTACTS, DELETE_CONTACT, DELETE_CONTACT_RECEIVED, REMOVE_CONTACT } from 'redux/constants/contact';\nimport { RESET } from 'redux/constants/main';\nvar initialState = {\n  addContact: {\n    isFetching: false,\n    errors: {},\n    successMessages: []\n  },\n  getContacts: {\n    isFetching: false,\n    result: []\n  },\n  deleteContact: {\n    isFetching: false,\n    currentContactIdIsDeleting: null\n  }\n};\nexport default function contactReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CONTACTS:\n      return Object.assign({}, state, {\n        getContacts: Object.assign({}, state.getContacts, {\n          isFetching: true\n        })\n      });\n\n    case GET_CONTACTS_RECEIVED:\n      return Object.assign({}, state, {\n        getContacts: Object.assign({}, state.getContacts, _objectSpread({\n          isFetching: false\n        }, action.params))\n      });\n\n    case RESET_GET_CONTACTS:\n      return Object.assign({}, state, {\n        getContacts: Object.assign({}, state.getContacts, {\n          isFetching: false,\n          result: []\n        })\n      });\n\n    case POST_ADD_CONTACT:\n      return Object.assign({}, state, {\n        addContact: Object.assign({}, state.addContact, {\n          isFetching: true\n        })\n      });\n\n    case POST_ADD_CONTACT_RECEIVED:\n      return Object.assign({}, state, {\n        addContact: Object.assign({}, state.addContact, _objectSpread({\n          isFetching: false\n        }, action.params))\n      });\n\n    case DELETE_CONTACT:\n      return Object.assign({}, state, {\n        deleteContact: Object.assign({}, state.deleteContact, {\n          isFetching: true,\n          currentContactIdIsDeleting: action.params.contactId\n        })\n      });\n\n    case DELETE_CONTACT_RECEIVED:\n      return Object.assign({}, state, {\n        deleteContact: Object.assign({}, state.deleteContact, {\n          isFetching: false,\n          currentContactIdIsDeleting: null\n        })\n      });\n\n    case RESET_ADD_CONTACT:\n      return Object.assign({}, state, {\n        addContact: Object.assign({}, state.addContact, {\n          isFetching: false,\n          errors: {},\n          successMessages: []\n        })\n      });\n\n    case REMOVE_CONTACT:\n      return Object.assign({}, state, {\n        getContacts: Object.assign({}, state.getContacts, {\n          result: state.getContacts.result.filter(function (item) {\n            return item._id !== action.params.contactId;\n          })\n        })\n      });\n\n    case RESET:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/redux/reducers/contact/index.js"],"names":["POST_ADD_CONTACT","POST_ADD_CONTACT_RECEIVED","RESET_ADD_CONTACT","GET_CONTACTS","GET_CONTACTS_RECEIVED","RESET_GET_CONTACTS","DELETE_CONTACT","DELETE_CONTACT_RECEIVED","REMOVE_CONTACT","RESET","initialState","addContact","isFetching","errors","successMessages","getContacts","result","deleteContact","currentContactIdIsDeleting","contactReducer","state","action","type","Object","assign","params","contactId","filter","item","_id"],"mappings":";AAAA,SACCA,gBADD,EAECC,yBAFD,EAGCC,iBAHD,EAICC,YAJD,EAKCC,qBALD,EAMCC,kBAND,EAOCC,cAPD,EAQCC,uBARD,EASCC,cATD,QAUO,yBAVP;AAYA,SACCC,KADD,QAEO,sBAFP;AAIA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,UAAU,EAAE;AACXC,IAAAA,UAAU,EAAE,KADD;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXC,IAAAA,eAAe,EAAE;AAHN,GADQ;AAMpBC,EAAAA,WAAW,EAAE;AACZH,IAAAA,UAAU,EAAE,KADA;AAEZI,IAAAA,MAAM,EAAE;AAFI,GANO;AAUpBC,EAAAA,aAAa,EAAE;AACdL,IAAAA,UAAU,EAAE,KADE;AAEdM,IAAAA,0BAA0B,EAAE;AAFd;AAVK,CAArB;AAgBA,eAAe,SAASC,cAAT,GAAuD;AAAA,MAA9BC,KAA8B,uEAAtBV,YAAsB;AAAA,MAARW,MAAQ;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKnB,YAAL;AACC,aAAOoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BL,QAAAA,WAAW,EAAEQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACL,WAAxB,EAAqC;AACjDH,UAAAA,UAAU,EAAE;AADqC,SAArC;AADkB,OAAzB,CAAP;;AAMD,SAAKR,qBAAL;AACC,aAAOmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BL,QAAAA,WAAW,EAAEQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACL,WAAxB;AACZH,UAAAA,UAAU,EAAE;AADA,WAETS,MAAM,CAACI,MAFE;AADkB,OAAzB,CAAP;;AAOD,SAAKpB,kBAAL;AACC,aAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BL,QAAAA,WAAW,EAAEQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACL,WAAxB,EAAqC;AACjDH,UAAAA,UAAU,EAAE,KADqC;AAEjDI,UAAAA,MAAM,EAAE;AAFyC,SAArC;AADkB,OAAzB,CAAP;;AAOD,SAAKhB,gBAAL;AACC,aAAOuB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BT,QAAAA,UAAU,EAAEY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACT,UAAxB,EAAoC;AAC/CC,UAAAA,UAAU,EAAE;AADmC,SAApC;AADmB,OAAzB,CAAP;;AAMD,SAAKX,yBAAL;AACC,aAAOsB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BT,QAAAA,UAAU,EAAEY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACT,UAAxB;AACXC,UAAAA,UAAU,EAAE;AADD,WAERS,MAAM,CAACI,MAFC;AADmB,OAAzB,CAAP;;AAOD,SAAKnB,cAAL;AACC,aAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BH,QAAAA,aAAa,EAAEM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACH,aAAxB,EAAuC;AACrDL,UAAAA,UAAU,EAAE,IADyC;AAErDM,UAAAA,0BAA0B,EAAEG,MAAM,CAACI,MAAP,CAAcC;AAFW,SAAvC;AADgB,OAAzB,CAAP;;AAOD,SAAKnB,uBAAL;AACC,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BH,QAAAA,aAAa,EAAEM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACH,aAAxB,EAAuC;AACrDL,UAAAA,UAAU,EAAE,KADyC;AAErDM,UAAAA,0BAA0B,EAAE;AAFyB,SAAvC;AADgB,OAAzB,CAAP;;AAOD,SAAKhB,iBAAL;AACC,aAAOqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BT,QAAAA,UAAU,EAAEY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACT,UAAxB,EAAoC;AAC/CC,UAAAA,UAAU,EAAE,KADmC;AAE/CC,UAAAA,MAAM,EAAE,EAFuC;AAG/CC,UAAAA,eAAe,EAAE;AAH8B,SAApC;AADmB,OAAzB,CAAP;;AAQD,SAAKN,cAAL;AACC,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BL,QAAAA,WAAW,EAAEQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACL,WAAxB,EAAqC;AACjDC,UAAAA,MAAM,EAAEI,KAAK,CAACL,WAAN,CAAkBC,MAAlB,CAAyBW,MAAzB,CAAgC,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACI,MAAP,CAAcC,SAA/B;AAAA,WAApC;AADyC,SAArC;AADkB,OAAzB,CAAP;;AAMD,SAAKjB,KAAL;AACC,aAAOC,YAAP;;AAED;AACC,aAAOU,KAAP;AA3EF;AA6EA","sourcesContent":["import {\n\tPOST_ADD_CONTACT,\n\tPOST_ADD_CONTACT_RECEIVED,\n\tRESET_ADD_CONTACT,\n\tGET_CONTACTS,\n\tGET_CONTACTS_RECEIVED,\n\tRESET_GET_CONTACTS,\n\tDELETE_CONTACT,\n\tDELETE_CONTACT_RECEIVED,\n\tREMOVE_CONTACT\n} from 'redux/constants/contact';\n\nimport {\n\tRESET\n} from 'redux/constants/main';\n\nconst initialState = {\n\taddContact: {\n\t\tisFetching: false,\n\t\terrors: {},\n\t\tsuccessMessages: []\n\t},\n\tgetContacts: {\n\t\tisFetching: false,\n\t\tresult: []\n\t},\n\tdeleteContact: {\n\t\tisFetching: false,\n\t\tcurrentContactIdIsDeleting: null\n\t}\n};\n\nexport default function contactReducer (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_CONTACTS:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tgetContacts: Object.assign({}, state.getContacts, {\n\t\t\t\t\tisFetching: true\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase GET_CONTACTS_RECEIVED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tgetContacts: Object.assign({}, state.getContacts, {\n\t\t\t\t\tisFetching: false,\n\t\t\t\t\t...action.params\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase RESET_GET_CONTACTS:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tgetContacts: Object.assign({}, state.getContacts, {\n\t\t\t\t\tisFetching: false,\n\t\t\t\t\tresult: []\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase POST_ADD_CONTACT:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\taddContact: Object.assign({}, state.addContact, {\n\t\t\t\t\tisFetching: true\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase POST_ADD_CONTACT_RECEIVED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\taddContact: Object.assign({}, state.addContact, {\n\t\t\t\t\tisFetching: false,\n\t\t\t\t\t...action.params\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase DELETE_CONTACT:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tdeleteContact: Object.assign({}, state.deleteContact, {\n\t\t\t\t\tisFetching: true,\n\t\t\t\t\tcurrentContactIdIsDeleting: action.params.contactId\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase DELETE_CONTACT_RECEIVED:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tdeleteContact: Object.assign({}, state.deleteContact, {\n\t\t\t\t\tisFetching: false,\n\t\t\t\t\tcurrentContactIdIsDeleting: null\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase RESET_ADD_CONTACT:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\taddContact: Object.assign({}, state.addContact, {\n\t\t\t\t\tisFetching: false,\n\t\t\t\t\terrors: {},\n\t\t\t\t\tsuccessMessages: []\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase REMOVE_CONTACT:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tgetContacts: Object.assign({}, state.getContacts, {\n\t\t\t\t\tresult: state.getContacts.result.filter(item => item._id !== action.params.contactId)\n\t\t\t\t})\n\t\t\t});\n\n\t\tcase RESET:\n\t\t\treturn initialState;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}