{"ast":null,"code":"import _classCallCheck from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/wrappers/actions/index.jsx\";\nimport React, { Component } from 'react';\nimport { IconComponent, ButtonComponent, DrawerComponent, DropDownMenuComponent, LabelComponent } from 'shared/components';\nimport { ConversationsList, AddContactDrawer, StartConversationDrawer } from 'entries/chat/containers';\nimport { UserInfoComponent, InputSearchComponent } from 'entries/chat/components';\nimport { logout, searchParam, getUser, setConversationLastMessageDateTime } from 'modules/utils';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport * as contactActions from 'redux/actions/contact';\nimport * as drawerActions from 'redux/actions/drawer';\nimport * as conversationActions from 'redux/actions/conversation';\nimport constants from 'modules/constants';\n\nvar ActionsWrapper =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ActionsWrapper, _Component);\n\n  function ActionsWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, ActionsWrapper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActionsWrapper).call(this, props));\n\n    _this.handleOpenAddContact = function () {\n      var contactActions = _this.props.contactActions;\n      contactActions.resetAddContact();\n\n      _this.openDrawer('addContact');\n    };\n\n    _this.handleOpenNewConversation = function () {\n      _this.openDrawer('newConversation');\n    };\n\n    _this.openDrawer = function (drawerName) {\n      var _this$props = _this.props,\n          contactActions = _this$props.contactActions,\n          drawerActions = _this$props.drawerActions;\n      contactActions.resetAddContact();\n      drawerActions.openDrawer(drawerName);\n    };\n\n    _this.handleLogout = function () {\n      logout();\n    };\n\n    _this.handleChangeSearch = function (value) {\n      _this.setState({\n        conversationsSearch: {\n          nickname: value\n        }\n      });\n    };\n\n    _this.conversationListToComponentData = function (conversations) {\n      var conversationData = _this.props.conversationData;\n      var currentPartnerIdConversation = conversationData.currentPartnerIdConversation;\n      var deleteConversation = conversationData.deleteConversation;\n      return conversations.map(function (item) {\n        var _item$partnerId = item.partnerId,\n            nickname = _item$partnerId.nickname,\n            profileColor = _item$partnerId.profileColor,\n            _id = _item$partnerId._id;\n        var unreadMessages = item.unreadMessages,\n            conversationId = item._id;\n        var lastMessage = item.messages[item.messages.length - 1];\n        return {\n          nickname: nickname,\n          profileColor: profileColor,\n          _id: _id,\n          conversationId: conversationId,\n          desc: lastMessage ? lastMessage.message : '',\n          rightLabel: lastMessage ? setConversationLastMessageDateTime(lastMessage.dateTime) : '',\n          unreadMessages: unreadMessages,\n          active: String(item.partnerId._id) === String(currentPartnerIdConversation),\n          isFetchingAction: deleteConversation.isFetching && String(deleteConversation.currentPartnerIdIsDeleting) === _id\n        };\n      });\n    };\n\n    _this.handleClickConversationItem = function (item) {\n      var conversationActions = _this.props.conversationActions;\n      conversationActions.setCurrentConversation({\n        partner: item\n      });\n    };\n\n    _this.handleDeleteConversation = function (item) {\n      var conversationActions = _this.props.conversationActions;\n      var _id = item._id;\n      confirmAlert({\n        customUI: function customUI(_ref) {\n          var onClose = _ref.onClose;\n          return React.createElement(\"div\", {\n            className: \"confirm-popup\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(LabelComponent, {\n            fontSemiBold: true,\n            text: constants.LABELS.CHAT.DELETE_CHAT_CONFIRM,\n            fontSize: 30,\n            alignCenter: true,\n            margin: \"0px 0px 25px 0px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"buttons-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, React.createElement(ButtonComponent, {\n            type: \"button\",\n            defaultButton: true,\n            small: true,\n            outline: true,\n            text: constants.LABELS.MAIN.NO,\n            margin: \"10px\",\n            width: 100,\n            onClick: onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }), React.createElement(ButtonComponent, {\n            type: \"button\",\n            defaultButton: true,\n            small: true,\n            outline: true,\n            text: constants.LABELS.MAIN.YES,\n            margin: \"10px\",\n            width: 100,\n            onClick: function onClick() {\n              conversationActions.deleteConversation({\n                partnerId: _id\n              });\n              onClose();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          })));\n        }\n      });\n    };\n\n    _this.state = {\n      conversationsSearch: {\n        nickname: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ActionsWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var conversationActions = this.props.conversationActions;\n      conversationActions.getConversations();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentUser = getUser() || {};\n      var conversationsSearch = this.state.conversationsSearch;\n      var conversationData = this.props.conversationData;\n      var isFetching = conversationData.isFetching,\n          result = conversationData.result;\n      var profileColor = currentUser.profileColor,\n          nickname = currentUser.nickname;\n      var conversations = this.conversationListToComponentData(result);\n      var items = searchParam(conversations, conversationsSearch);\n      return React.createElement(\"div\", {\n        className: \"actions-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(UserInfoComponent, {\n        isFetching: false,\n        column: true,\n        profile: {\n          label: nickname,\n          width: 60,\n          height: 60,\n          backgroundColor: profileColor,\n          color: 'white',\n          labelFontSize: 16\n        },\n        title: {\n          text: nickname,\n          fontSize: 16,\n          margin: '10px 0px 0px 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(ButtonComponent, {\n        type: \"button\",\n        width: 26,\n        height: 26,\n        link: true,\n        onClick: this.handleOpenAddContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(IconComponent, {\n        fill: \"#555657\",\n        icon: \"account-plus\",\n        width: 26,\n        height: 26,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })), React.createElement(ButtonComponent, {\n        type: \"button\",\n        width: 26,\n        height: 26,\n        margin: \"0px 0px 0px 20px\",\n        link: true,\n        onClick: this.handleOpenNewConversation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(IconComponent, {\n        fill: \"#555657\",\n        icon: \"message-text\",\n        width: 26,\n        height: 26,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      })), React.createElement(DropDownMenuComponent, {\n        options: [{\n          text: constants.LABELS.CHAT.LOGOUT,\n          event: this.handleLogout\n        }],\n        icon: {\n          fill: '#555657',\n          icon: 'dots-vertical',\n          width: 26,\n          height: 26\n        },\n        marginButton: \"0px 0px 0px 20px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(InputSearchComponent, {\n        handleChange: this.handleChangeSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), React.createElement(ConversationsList, {\n        items: items,\n        isFetching: isFetching,\n        emptyMessage: constants.LABELS.CHAT.NO_CONVERSATIONS_TO_SHOW,\n        onClickItem: this.handleClickConversationItem,\n        onDeleteItem: this.handleDeleteConversation,\n        deleteDropDownMessage: constants.LABELS.CHAT.DELETE_CHAT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(DrawerComponent, {\n        drawerName: \"addContact\",\n        title: constants.LABELS.CHAT.ADD_CONTACT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(AddContactDrawer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })), React.createElement(DrawerComponent, {\n        drawerName: \"newConversation\",\n        title: constants.LABELS.CHAT.NEW_CONVERSATION,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(StartConversationDrawer, {\n        drawerName: \"newConversation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ActionsWrapper;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contactData: state.contact,\n    conversationData: state.conversation\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    contactActions: bindActionCreators(contactActions, dispatch),\n    conversationActions: bindActionCreators(conversationActions, dispatch),\n    drawerActions: bindActionCreators(drawerActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionsWrapper);","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/wrappers/actions/index.jsx"],"names":["React","Component","IconComponent","ButtonComponent","DrawerComponent","DropDownMenuComponent","LabelComponent","ConversationsList","AddContactDrawer","StartConversationDrawer","UserInfoComponent","InputSearchComponent","logout","searchParam","getUser","setConversationLastMessageDateTime","connect","bindActionCreators","confirmAlert","contactActions","drawerActions","conversationActions","constants","ActionsWrapper","props","handleOpenAddContact","resetAddContact","openDrawer","handleOpenNewConversation","drawerName","handleLogout","handleChangeSearch","value","setState","conversationsSearch","nickname","conversationListToComponentData","conversations","conversationData","currentPartnerIdConversation","deleteConversation","map","item","partnerId","profileColor","_id","unreadMessages","conversationId","lastMessage","messages","length","desc","message","rightLabel","dateTime","active","String","isFetchingAction","isFetching","currentPartnerIdIsDeleting","handleClickConversationItem","setCurrentConversation","partner","handleDeleteConversation","customUI","onClose","LABELS","CHAT","DELETE_CHAT_CONFIRM","MAIN","NO","YES","state","getConversations","currentUser","result","items","label","width","height","backgroundColor","color","labelFontSize","text","fontSize","margin","LOGOUT","event","fill","icon","NO_CONVERSATIONS_TO_SHOW","DELETE_CHAT","ADD_CONTACT","NEW_CONVERSATION","mapStateToProps","contactData","contact","conversation","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {\n\tComponent\n} from 'react';\n\nimport {\n\tIconComponent,\n\tButtonComponent,\n\tDrawerComponent,\n\tDropDownMenuComponent,\n\tLabelComponent\n} from 'shared/components';\n\nimport {\n\tConversationsList,\n\tAddContactDrawer,\n\tStartConversationDrawer\n} from 'entries/chat/containers';\n\nimport {\n\tUserInfoComponent,\n\tInputSearchComponent\n} from 'entries/chat/components';\n\nimport {\n\tlogout,\n\tsearchParam,\n\tgetUser,\n\tsetConversationLastMessageDateTime\n} from 'modules/utils';\n\nimport {\n\tconnect\n} from 'react-redux';\n\nimport {\n\tbindActionCreators\n} from 'redux';\n\nimport {\n\tconfirmAlert\n} from 'react-confirm-alert';\n\nimport * as contactActions from 'redux/actions/contact';\nimport * as drawerActions from 'redux/actions/drawer';\nimport * as conversationActions from 'redux/actions/conversation';\nimport constants from 'modules/constants';\n\nclass ActionsWrapper extends Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tconversationsSearch: {\n\t\t\t\tnickname: ''\n\t\t\t}\n\t\t};\n\t}\n\n\tcomponentDidMount () {\n\t\tconst {\n\t\t\tconversationActions\n\t\t} = this.props;\n\n\t\tconversationActions.getConversations();\n\t}\n\n\thandleOpenAddContact = () => {\n\t\tconst {\n\t\t\tcontactActions\n\t\t} = this.props;\n\n\t\tcontactActions.resetAddContact();\n\t\tthis.openDrawer('addContact');\n\t}\n\n\thandleOpenNewConversation = () => {\n\t\tthis.openDrawer('newConversation');\n\t}\n\n\topenDrawer = (drawerName) => {\n\t\tconst {\n\t\t\tcontactActions,\n\t\t\tdrawerActions\n\t\t} = this.props;\n\n\t\tcontactActions.resetAddContact();\n\t\tdrawerActions.openDrawer(drawerName);\n\t}\n\n\thandleLogout = () => {\n\t\tlogout();\n\t}\n\n\thandleChangeSearch = (value) => {\n\t\tthis.setState({\n\t\t\tconversationsSearch: {\n\t\t\t\tnickname: value\n\t\t\t}\n\t\t});\n\t}\n\n\tconversationListToComponentData = (conversations) => {\n\t\tconst {\n\t\t\tconversationData\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tcurrentPartnerIdConversation\n\t\t} = conversationData;\n\n\t\tconst {\n\t\t\tdeleteConversation\n\t\t} = conversationData;\n\n\t\treturn conversations.map((item) => {\n\t\t\tconst {\n\t\t\t\tnickname,\n\t\t\t\tprofileColor,\n\t\t\t\t_id\n\t\t\t} = item.partnerId;\n\n\t\t\tconst {\n\t\t\t\tunreadMessages,\n\t\t\t\t_id: conversationId\n\t\t\t} = item;\n\n\t\t\tconst lastMessage = item.messages[item.messages.length - 1];\n\n\t\t\treturn {\n\t\t\t\tnickname,\n\t\t\t\tprofileColor,\n\t\t\t\t_id,\n\t\t\t\tconversationId,\n\t\t\t\tdesc: lastMessage ? lastMessage.message : '',\n\t\t\t\trightLabel: lastMessage ? setConversationLastMessageDateTime(lastMessage.dateTime) : '',\n\t\t\t\tunreadMessages,\n\t\t\t\tactive: String(item.partnerId._id) === String(currentPartnerIdConversation),\n\t\t\t\tisFetchingAction: (\n\t\t\t\t\tdeleteConversation.isFetching\n\t\t\t\t\t&& String(deleteConversation.currentPartnerIdIsDeleting) === _id\n\t\t\t\t)\n\t\t\t};\n\t\t});\n\t}\n\n\thandleClickConversationItem = (item) => {\n\t\tconst {\n\t\t\tconversationActions\n\t\t} = this.props;\n\n\t\tconversationActions.setCurrentConversation({\n\t\t\tpartner: item\n\t\t});\n\t}\n\n\thandleDeleteConversation = (item) => {\n\t\tconst {\n\t\t\tconversationActions\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\t_id\n\t\t} = item;\n\n\t\tconfirmAlert({\n\t\t\tcustomUI: ({ onClose }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className='confirm-popup'>\n\t\t\t\t\t\t<LabelComponent\n\t\t\t\t\t\t\tfontSemiBold\n\t\t\t\t\t\t\ttext={constants.LABELS.CHAT.DELETE_CHAT_CONFIRM}\n\t\t\t\t\t\t\tfontSize={30}\n\t\t\t\t\t\t\talignCenter\n\t\t\t\t\t\t\tmargin=\"0px 0px 25px 0px\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='buttons-container'>\n\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tdefaultButton\n\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\ttext={constants.LABELS.MAIN.NO}\n\t\t\t\t\t\t\t\tmargin=\"10px\"\n\t\t\t\t\t\t\t\twidth={100}\n\t\t\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tdefaultButton\n\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\ttext={constants.LABELS.MAIN.YES}\n\t\t\t\t\t\t\t\tmargin=\"10px\"\n\t\t\t\t\t\t\t\twidth={100}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tconversationActions.deleteConversation({\n\t\t\t\t\t\t\t\t\t\tpartnerId: _id\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\trender () {\n\t\tconst currentUser = getUser() || {};\n\n\t\tconst {\n\t\t\tconversationsSearch\n\t\t} = this.state;\n\n\t\tconst {\n\t\t\tconversationData\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tisFetching,\n\t\t\tresult\n\t\t} = conversationData;\n\n\t\tconst {\n\t\t\tprofileColor,\n\t\t\tnickname\n\t\t} = currentUser;\n\n\t\tconst conversations = this.conversationListToComponentData(result);\n\t\tconst items = searchParam(conversations, conversationsSearch);\n\n\t\treturn (\n\t\t\t<div className='actions-wrapper'>\n\t\t\t\t<header className='header-container'>\n\t\t\t\t\t<div className='header-content'>\n\t\t\t\t\t\t<UserInfoComponent\n\t\t\t\t\t\t\tisFetching={false}\n\t\t\t\t\t\t\tcolumn\n\t\t\t\t\t\t\tprofile={{\n\t\t\t\t\t\t\t\tlabel: nickname,\n\t\t\t\t\t\t\t\twidth: 60,\n\t\t\t\t\t\t\t\theight: 60,\n\t\t\t\t\t\t\t\tbackgroundColor: profileColor,\n\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\tlabelFontSize: 16\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle={{\n\t\t\t\t\t\t\t\ttext: nickname,\n\t\t\t\t\t\t\t\tfontSize: 16,\n\t\t\t\t\t\t\t\tmargin: '10px 0px 0px 0px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\twidth={26}\n\t\t\t\t\t\t\t\theight={26}\n\t\t\t\t\t\t\t\tlink\n\t\t\t\t\t\t\t\tonClick={this.handleOpenAddContact}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<IconComponent\n\t\t\t\t\t\t\t\t\tfill=\"#555657\"\n\t\t\t\t\t\t\t\t\ticon=\"account-plus\"\n\t\t\t\t\t\t\t\t\twidth={26}\n\t\t\t\t\t\t\t\t\theight={26}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ButtonComponent>\n\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\twidth={26}\n\t\t\t\t\t\t\t\theight={26}\n\t\t\t\t\t\t\t\tmargin=\"0px 0px 0px 20px\"\n\t\t\t\t\t\t\t\tlink\n\t\t\t\t\t\t\t\tonClick={this.handleOpenNewConversation}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<IconComponent\n\t\t\t\t\t\t\t\t\tfill=\"#555657\"\n\t\t\t\t\t\t\t\t\ticon=\"message-text\"\n\t\t\t\t\t\t\t\t\twidth={26}\n\t\t\t\t\t\t\t\t\theight={26}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ButtonComponent>\n\t\t\t\t\t\t\t<DropDownMenuComponent\n\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttext: constants.LABELS.CHAT.LOGOUT,\n\t\t\t\t\t\t\t\t\t\tevent: this.handleLogout\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\ticon={{\n\t\t\t\t\t\t\t\t\tfill: '#555657',\n\t\t\t\t\t\t\t\t\ticon: 'dots-vertical',\n\t\t\t\t\t\t\t\t\twidth: 26,\n\t\t\t\t\t\t\t\t\theight: 26\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tmarginButton='0px 0px 0px 20px'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<div>\n\t\t\t\t\t<InputSearchComponent\n\t\t\t\t\t\thandleChange={this.handleChangeSearch}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ConversationsList\n\t\t\t\t\titems={items}\n\t\t\t\t\tisFetching={isFetching}\n\t\t\t\t\temptyMessage={constants.LABELS.CHAT.NO_CONVERSATIONS_TO_SHOW}\n\t\t\t\t\tonClickItem={this.handleClickConversationItem}\n\t\t\t\t\tonDeleteItem={this.handleDeleteConversation}\n\t\t\t\t\tdeleteDropDownMessage={constants.LABELS.CHAT.DELETE_CHAT}\n\t\t\t\t/>\n\t\t\t\t<DrawerComponent\n\t\t\t\t\tdrawerName='addContact'\n\t\t\t\t\ttitle={constants.LABELS.CHAT.ADD_CONTACT}\n\t\t\t\t>\n\t\t\t\t\t<AddContactDrawer />\n\t\t\t\t</DrawerComponent>\n\t\t\t\t<DrawerComponent\n\t\t\t\t\tdrawerName='newConversation'\n\t\t\t\t\ttitle={constants.LABELS.CHAT.NEW_CONVERSATION}\n\t\t\t\t>\n\t\t\t\t\t<StartConversationDrawer\n\t\t\t\t\t\tdrawerName='newConversation'\n\t\t\t\t\t/>\n\t\t\t\t</DrawerComponent>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcontactData: state.contact,\n\t\tconversationData: state.conversation\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tcontactActions: bindActionCreators(contactActions, dispatch),\n\t\tconversationActions: bindActionCreators(conversationActions, dispatch),\n\t\tdrawerActions: bindActionCreators(drawerActions, dispatch),\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ActionsWrapper);\n"]},"metadata":{},"sourceType":"module"}