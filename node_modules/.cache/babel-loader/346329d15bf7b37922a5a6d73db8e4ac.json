{"ast":null,"code":"import _slicedToArray from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/shared/components/call-window/index.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nvar getButtonClass = function getButtonClass(icon, enabled) {\n  return classnames(\"btn-action fa \".concat(icon), {\n    disable: !enabled\n  });\n};\n\nfunction CallWindow(_ref) {\n  var peerSrc = _ref.peerSrc,\n      localSrc = _ref.localSrc,\n      config = _ref.config,\n      mediaDevice = _ref.mediaDevice,\n      status = _ref.status,\n      endCall = _ref.endCall;\n  var peerVideo = useRef(null);\n  var localVideo = useRef(null);\n\n  var _useState = useState(config.video),\n      _useState2 = _slicedToArray(_useState, 2),\n      video = _useState2[0],\n      setVideo = _useState2[1];\n\n  var _useState3 = useState(config.audio),\n      _useState4 = _slicedToArray(_useState3, 2),\n      audio = _useState4[0],\n      setAudio = _useState4[1];\n\n  useEffect(function () {\n    if (peerVideo.current && peerSrc) {\n      peerVideo.current.srcObject = localSrc;\n      console.log('chengando peer ', peerSrc);\n    }\n\n    if (localVideo.current && localSrc) {\n      console.log('chengando local ', localSrc);\n      localVideo.current.srcObject = localSrc;\n    }\n  });\n  useEffect(function () {\n    if (mediaDevice) {\n      mediaDevice.toggle('Video', video);\n      mediaDevice.toggle('Audio', audio);\n    }\n  });\n  /**\n   * Turn on/off a media device\n   * @param {String} deviceType - Type of the device eg: Video, Audio\n   */\n\n  var toggleMediaDevice = function toggleMediaDevice(deviceType) {\n    if (deviceType === 'video') {\n      setVideo(!video);\n      mediaDevice.toggle('Video');\n    }\n\n    if (deviceType === 'audio') {\n      setAudio(!audio);\n      mediaDevice.toggle('Audio');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classnames('call-window', status),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    id: \"peerVideo\",\n    ref: peerVideo,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    id: \"localVideo\",\n    ref: localVideo,\n    autoPlay: true,\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"video-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    key: \"btnVideo\",\n    type: \"button\",\n    className: getButtonClass('fa-video-camera', video),\n    onClick: function onClick() {\n      return toggleMediaDevice('video');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    key: \"btnAudio\",\n    type: \"button\",\n    className: getButtonClass('fa-microphone', audio),\n    onClick: function onClick() {\n      return toggleMediaDevice('audio');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-action hangup fa fa-phone\",\n    onClick: function onClick() {\n      return endCall(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n}\n\nCallWindow.propTypes = {\n  status: PropTypes.string.isRequired,\n  localSrc: PropTypes.object,\n  // eslint-disable-line\n  peerSrc: PropTypes.object,\n  // eslint-disable-line\n  config: PropTypes.shape({\n    audio: PropTypes.bool.isRequired,\n    video: PropTypes.bool.isRequired\n  }).isRequired,\n  mediaDevice: PropTypes.object // eslint-disable-line\n\n};\nexport default CallWindow;","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/shared/components/call-window/index.jsx"],"names":["React","useState","useEffect","useRef","PropTypes","classnames","getButtonClass","icon","enabled","disable","CallWindow","peerSrc","localSrc","config","mediaDevice","status","endCall","peerVideo","localVideo","video","setVideo","audio","setAudio","current","srcObject","console","log","toggle","toggleMediaDevice","deviceType","propTypes","string","isRequired","object","shape","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,OAAP;AAAA,SACtBH,UAAU,yBAAkBE,IAAlB,GAA0B;AAAEE,IAAAA,OAAO,EAAE,CAACD;AAAZ,GAA1B,CADY;AAAA,CAAvB;;AAGA,SAASE,UAAT,OAOG;AAAA,MANFC,OAME,QANFA,OAME;AAAA,MALFC,QAKE,QALFA,QAKE;AAAA,MAJFC,MAIE,QAJFA,MAIE;AAAA,MAHFC,WAGE,QAHFA,WAGE;AAAA,MAFFC,MAEE,QAFFA,MAEE;AAAA,MADFC,OACE,QADFA,OACE;AACF,MAAMC,SAAS,GAAGd,MAAM,CAAC,IAAD,CAAxB;AACA,MAAMe,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAzB;;AAFE,kBAGwBF,QAAQ,CAACY,MAAM,CAACM,KAAR,CAHhC;AAAA;AAAA,MAGKA,KAHL;AAAA,MAGYC,QAHZ;;AAAA,mBAIwBnB,QAAQ,CAACY,MAAM,CAACQ,KAAR,CAJhC;AAAA;AAAA,MAIKA,KAJL;AAAA,MAIYC,QAJZ;;AAMFpB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIe,SAAS,CAACM,OAAV,IAAqBZ,OAAzB,EAAkC;AACjCM,MAAAA,SAAS,CAACM,OAAV,CAAkBC,SAAlB,GAA8BZ,QAA9B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bf,OAA/B;AACA;;AAED,QAAIO,UAAU,CAACK,OAAX,IAAsBX,QAA1B,EAAoC;AACnCa,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCd,QAAhC;AACAM,MAAAA,UAAU,CAACK,OAAX,CAAmBC,SAAnB,GAA+BZ,QAA/B;AACA;AACD,GAVQ,CAAT;AAYAV,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIY,WAAJ,EAAiB;AAChBA,MAAAA,WAAW,CAACa,MAAZ,CAAmB,OAAnB,EAA4BR,KAA5B;AACAL,MAAAA,WAAW,CAACa,MAAZ,CAAmB,OAAnB,EAA4BN,KAA5B;AACA;AACD,GALQ,CAAT;AAOA;;;;;AAIA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,UAAU,EAAI;AACvC,QAAIA,UAAU,KAAK,OAAnB,EAA4B;AAC3BT,MAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAL,MAAAA,WAAW,CAACa,MAAZ,CAAmB,OAAnB;AACA;;AACD,QAAIE,UAAU,KAAK,OAAnB,EAA4B;AAC3BP,MAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACAP,MAAAA,WAAW,CAACa,MAAZ,CAAmB,OAAnB;AACA;AACD,GATD;;AAWA,SACC;AAAK,IAAA,SAAS,EAAEtB,UAAU,CAAC,aAAD,EAAgBU,MAAhB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,EAAE,EAAC,WAAV;AAAsB,IAAA,GAAG,EAAEE,SAA3B;AAAsC,IAAA,QAAQ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,GAAG,EAAEC,UAA5B;AAAwC,IAAA,QAAQ,MAAhD;AAAiD,IAAA,KAAK,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,GAAG,EAAC,UADL;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,SAAS,EAAEZ,cAAc,CAAC,iBAAD,EAAoBa,KAApB,CAH1B;AAIC,IAAA,OAAO,EAAE;AAAA,aAAMS,iBAAiB,CAAC,OAAD,CAAvB;AAAA,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAOC;AACC,IAAA,GAAG,EAAC,UADL;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,SAAS,EAAEtB,cAAc,CAAC,eAAD,EAAkBe,KAAlB,CAH1B;AAIC,IAAA,OAAO,EAAE;AAAA,aAAMO,iBAAiB,CAAC,OAAD,CAAvB;AAAA,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,EAaC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,SAAS,EAAC,+BAFX;AAGC,IAAA,OAAO,EAAE;AAAA,aAAMZ,OAAO,CAAC,IAAD,CAAb;AAAA,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,CAHD,CADD;AAyBA;;AAEDN,UAAU,CAACoB,SAAX,GAAuB;AACtBf,EAAAA,MAAM,EAAEX,SAAS,CAAC2B,MAAV,CAAiBC,UADH;AAEtBpB,EAAAA,QAAQ,EAAER,SAAS,CAAC6B,MAFE;AAEM;AAC5BtB,EAAAA,OAAO,EAAEP,SAAS,CAAC6B,MAHG;AAGK;AAC3BpB,EAAAA,MAAM,EAAET,SAAS,CAAC8B,KAAV,CAAgB;AACvBb,IAAAA,KAAK,EAAEjB,SAAS,CAAC+B,IAAV,CAAeH,UADC;AAEvBb,IAAAA,KAAK,EAAEf,SAAS,CAAC+B,IAAV,CAAeH;AAFC,GAAhB,EAGLA,UAPmB;AAQtBlB,EAAAA,WAAW,EAAEV,SAAS,CAAC6B,MARD,CAQQ;;AARR,CAAvB;AAWA,eAAevB,UAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst getButtonClass = (icon, enabled) =>\n\tclassnames(`btn-action fa ${icon}`, { disable: !enabled });\n\nfunction CallWindow({\n\tpeerSrc,\n\tlocalSrc,\n\tconfig,\n\tmediaDevice,\n\tstatus,\n\tendCall\n}) {\n\tconst peerVideo = useRef(null);\n\tconst localVideo = useRef(null);\n\tconst [video, setVideo] = useState(config.video);\n\tconst [audio, setAudio] = useState(config.audio);\n\n\tuseEffect(() => {\n\t\tif (peerVideo.current && peerSrc) {\n\t\t\tpeerVideo.current.srcObject = localSrc;\n\t\t\tconsole.log('chengando peer ', peerSrc);\n\t\t}\n\n\t\tif (localVideo.current && localSrc) {\n\t\t\tconsole.log('chengando local ', localSrc);\n\t\t\tlocalVideo.current.srcObject = localSrc;\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (mediaDevice) {\n\t\t\tmediaDevice.toggle('Video', video);\n\t\t\tmediaDevice.toggle('Audio', audio);\n\t\t}\n\t});\n\n\t/**\n\t * Turn on/off a media device\n\t * @param {String} deviceType - Type of the device eg: Video, Audio\n\t */\n\tconst toggleMediaDevice = deviceType => {\n\t\tif (deviceType === 'video') {\n\t\t\tsetVideo(!video);\n\t\t\tmediaDevice.toggle('Video');\n\t\t}\n\t\tif (deviceType === 'audio') {\n\t\t\tsetAudio(!audio);\n\t\t\tmediaDevice.toggle('Audio');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classnames('call-window', status)}>\n\t\t\t<video id=\"peerVideo\" ref={peerVideo} autoPlay />\n\t\t\t<video id=\"localVideo\" ref={localVideo} autoPlay muted />\n\t\t\t<div className=\"video-control\">\n\t\t\t\t<button\n\t\t\t\t\tkey=\"btnVideo\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName={getButtonClass('fa-video-camera', video)}\n\t\t\t\t\tonClick={() => toggleMediaDevice('video')}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tkey=\"btnAudio\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName={getButtonClass('fa-microphone', audio)}\n\t\t\t\t\tonClick={() => toggleMediaDevice('audio')}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn-action hangup fa fa-phone\"\n\t\t\t\t\tonClick={() => endCall(true)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nCallWindow.propTypes = {\n\tstatus: PropTypes.string.isRequired,\n\tlocalSrc: PropTypes.object, // eslint-disable-line\n\tpeerSrc: PropTypes.object, // eslint-disable-line\n\tconfig: PropTypes.shape({\n\t\taudio: PropTypes.bool.isRequired,\n\t\tvideo: PropTypes.bool.isRequired\n\t}).isRequired,\n\tmediaDevice: PropTypes.object // eslint-disable-line\n};\n\nexport default CallWindow;\n"]},"metadata":{},"sourceType":"module"}