{"ast":null,"code":"import _classCallCheck from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/containers/start-conversation-drawer/index.jsx\";\nimport React, { Component } from 'react';\nimport { ConversationsList } from 'entries/chat/containers';\nimport { InputSearchComponent } from 'entries/chat/components';\nimport { LabelComponent, ButtonComponent } from 'shared/components';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { bindActionCreators } from 'redux';\nimport constants from 'modules/constants';\nimport * as contactActions from 'redux/actions/contact';\nimport * as drawerActions from 'redux/actions/drawer';\nimport * as conversationActions from 'redux/actions/conversation';\nimport { searchParam } from 'modules/utils';\n\nvar StartConversationDrawer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StartConversationDrawer, _Component);\n\n  function StartConversationDrawer(props) {\n    var _this;\n\n    _classCallCheck(this, StartConversationDrawer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StartConversationDrawer).call(this, props));\n\n    _this.handleChangeSearch = function (value) {\n      _this.setState({\n        contactsSearch: {\n          nickname: value\n        }\n      });\n    };\n\n    _this.handleClickConversationItem = function (item) {\n      var _this$props = _this.props,\n          drawerActions = _this$props.drawerActions,\n          drawerName = _this$props.drawerName,\n          conversationActions = _this$props.conversationActions;\n      conversationActions.setCurrentConversation({\n        partner: item\n      });\n      drawerActions.closeDrawer(drawerName);\n    };\n\n    _this.handleDeleteContact = function (item) {\n      var contactActions = _this.props.contactActions;\n      var _id = item._id;\n      confirmAlert({\n        customUI: function customUI(_ref) {\n          var onClose = _ref.onClose;\n          return React.createElement(\"div\", {\n            className: \"confirm-popup\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(LabelComponent, {\n            fontSemiBold: true,\n            text: constants.LABELS.CONTACT.DELETE_CONTACT_CONFIRM,\n            fontSize: 30,\n            alignCenter: true,\n            margin: \"0px 0px 25px 0px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"buttons-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(ButtonComponent, {\n            type: \"button\",\n            defaultButton: true,\n            small: true,\n            outline: true,\n            text: constants.LABELS.MAIN.NO,\n            margin: \"10px\",\n            width: 100,\n            onClick: onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }), React.createElement(ButtonComponent, {\n            type: \"button\",\n            defaultButton: true,\n            small: true,\n            outline: true,\n            text: constants.LABELS.MAIN.YES,\n            margin: \"10px\",\n            width: 100,\n            onClick: function onClick() {\n              onClose();\n              contactActions.deleteContact({\n                contactId: _id\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          })));\n        }\n      });\n    };\n\n    _this.getContactsData = function (contacts) {\n      var contactData = _this.props.contactData;\n      var deleteContact = contactData.deleteContact;\n      return contacts.map(function (item) {\n        var nickname = item.nickname,\n            profileColor = item.profileColor,\n            _id = item._id;\n        return {\n          nickname: nickname,\n          profileColor: profileColor,\n          _id: _id,\n          isFetchingAction: deleteContact.isFetching && String(deleteContact.currentContactIdIsDeleting) === String(_id)\n        };\n      });\n    };\n\n    _this.state = {\n      contactsSearch: {\n        nickname: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(StartConversationDrawer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var contactActions = this.props.contactActions;\n      contactActions.resetGetContacts();\n      contactActions.getContacts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var contactData = this.props.contactData;\n      var contactsSearch = this.state.contactsSearch;\n      var getContacts = contactData.getContacts;\n      var items = searchParam(this.getContactsData(getContacts.result), contactsSearch);\n      return React.createElement(\"div\", {\n        className: \"start-conversation-drawer-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(InputSearchComponent, {\n        handleChange: this.handleChangeSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(ConversationsList, {\n        items: items,\n        isFetching: getContacts.isFetching,\n        emptyMessage: constants.LABELS.CHAT.NO_CONTACTS_TO_SHOW,\n        onClickItem: this.handleClickConversationItem,\n        onDeleteItem: this.handleDeleteContact,\n        deleteDropDownMessage: constants.LABELS.CONTACT.DELETE_CONTACT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StartConversationDrawer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contactData: state.contact\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    contactActions: bindActionCreators(contactActions, dispatch),\n    drawerActions: bindActionCreators(drawerActions, dispatch),\n    conversationActions: bindActionCreators(conversationActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartConversationDrawer);","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/entries/chat/containers/start-conversation-drawer/index.jsx"],"names":["React","Component","ConversationsList","InputSearchComponent","LabelComponent","ButtonComponent","connect","confirmAlert","bindActionCreators","constants","contactActions","drawerActions","conversationActions","searchParam","StartConversationDrawer","props","handleChangeSearch","value","setState","contactsSearch","nickname","handleClickConversationItem","item","drawerName","setCurrentConversation","partner","closeDrawer","handleDeleteContact","_id","customUI","onClose","LABELS","CONTACT","DELETE_CONTACT_CONFIRM","MAIN","NO","YES","deleteContact","contactId","getContactsData","contacts","contactData","map","profileColor","isFetchingAction","isFetching","String","currentContactIdIsDeleting","state","resetGetContacts","getContacts","items","result","CHAT","NO_CONTACTS_TO_SHOW","DELETE_CONTACT","mapStateToProps","contact","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACCC,SADD,QAEO,OAFP;AAIA,SACCC,iBADD,QAEO,yBAFP;AAIA,SACCC,oBADD,QAEO,yBAFP;AAIA,SACCC,cADD,EAECC,eAFD,QAGO,mBAHP;AAKA,SACCC,OADD,QAEO,aAFP;AAIA,SACCC,YADD,QAEO,qBAFP;AAIA,SACCC,kBADD,QAEO,OAFP;AAIA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAO,KAAKC,cAAZ,MAAgC,uBAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,OAAO,KAAKC,mBAAZ,MAAqC,4BAArC;AAEA,SACCC,WADD,QAEO,eAFP;;IAIMC,uB;;;;;AACL,mCAAaC,KAAb,EAAoB;AAAA;;AAAA;;AACnB,iGAAMA,KAAN;;AADmB,UAmBpBC,kBAnBoB,GAmBC,UAACC,KAAD,EAAW;AAC/B,YAAKC,QAAL,CAAc;AACbC,QAAAA,cAAc,EAAE;AACfC,UAAAA,QAAQ,EAAEH;AADK;AADH,OAAd;AAKA,KAzBmB;;AAAA,UA2BpBI,2BA3BoB,GA2BU,UAACC,IAAD,EAAU;AAAA,wBAKnC,MAAKP,KAL8B;AAAA,UAEtCJ,aAFsC,eAEtCA,aAFsC;AAAA,UAGtCY,UAHsC,eAGtCA,UAHsC;AAAA,UAItCX,mBAJsC,eAItCA,mBAJsC;AAOvCA,MAAAA,mBAAmB,CAACY,sBAApB,CAA2C;AAC1CC,QAAAA,OAAO,EAAEH;AADiC,OAA3C;AAIAX,MAAAA,aAAa,CAACe,WAAd,CAA0BH,UAA1B;AACA,KAvCmB;;AAAA,UAyCpBI,mBAzCoB,GAyCE,UAACL,IAAD,EAAU;AAAA,UAE9BZ,cAF8B,GAG3B,MAAKK,KAHsB,CAE9BL,cAF8B;AAAA,UAM9BkB,GAN8B,GAO3BN,IAP2B,CAM9BM,GAN8B;AAS/BrB,MAAAA,YAAY,CAAC;AACZsB,QAAAA,QAAQ,EAAE,wBAAiB;AAAA,cAAdC,OAAc,QAAdA,OAAc;AAC1B,iBACC;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,oBAAC,cAAD;AACC,YAAA,YAAY,MADb;AAEC,YAAA,IAAI,EAAErB,SAAS,CAACsB,MAAV,CAAiBC,OAAjB,CAAyBC,sBAFhC;AAGC,YAAA,QAAQ,EAAE,EAHX;AAIC,YAAA,WAAW,MAJZ;AAKC,YAAA,MAAM,EAAC,kBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAQC;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,oBAAC,eAAD;AACC,YAAA,IAAI,EAAC,QADN;AAEC,YAAA,aAAa,MAFd;AAGC,YAAA,KAAK,MAHN;AAIC,YAAA,OAAO,MAJR;AAKC,YAAA,IAAI,EAAExB,SAAS,CAACsB,MAAV,CAAiBG,IAAjB,CAAsBC,EAL7B;AAMC,YAAA,MAAM,EAAC,MANR;AAOC,YAAA,KAAK,EAAE,GAPR;AAQC,YAAA,OAAO,EAAEL,OARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAWC,oBAAC,eAAD;AACC,YAAA,IAAI,EAAC,QADN;AAEC,YAAA,aAAa,MAFd;AAGC,YAAA,KAAK,MAHN;AAIC,YAAA,OAAO,MAJR;AAKC,YAAA,IAAI,EAAErB,SAAS,CAACsB,MAAV,CAAiBG,IAAjB,CAAsBE,GAL7B;AAMC,YAAA,MAAM,EAAC,MANR;AAOC,YAAA,KAAK,EAAE,GAPR;AAQC,YAAA,OAAO,EAAE,mBAAM;AACdN,cAAAA,OAAO;AACPpB,cAAAA,cAAc,CAAC2B,aAAf,CAA6B;AAC5BC,gBAAAA,SAAS,EAAEV;AADiB,eAA7B;AAGA,aAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXD,CARD,CADD;AAsCA;AAxCW,OAAD,CAAZ;AA0CA,KA5FmB;;AAAA,UA8FpBW,eA9FoB,GA8FF,UAACC,QAAD,EAAc;AAAA,UAE9BC,WAF8B,GAG3B,MAAK1B,KAHsB,CAE9B0B,WAF8B;AAAA,UAM9BJ,aAN8B,GAO3BI,WAP2B,CAM9BJ,aAN8B;AAS/B,aAAOG,QAAQ,CAACE,GAAT,CAAa,UAAApB,IAAI,EAAI;AAAA,YAE1BF,QAF0B,GAKvBE,IALuB,CAE1BF,QAF0B;AAAA,YAG1BuB,YAH0B,GAKvBrB,IALuB,CAG1BqB,YAH0B;AAAA,YAI1Bf,GAJ0B,GAKvBN,IALuB,CAI1BM,GAJ0B;AAO3B,eAAO;AACNR,UAAAA,QAAQ,EAARA,QADM;AAENuB,UAAAA,YAAY,EAAZA,YAFM;AAGNf,UAAAA,GAAG,EAAHA,GAHM;AAINgB,UAAAA,gBAAgB,EACfP,aAAa,CAACQ,UAAd,IACGC,MAAM,CAACT,aAAa,CAACU,0BAAf,CAAN,KAAqDD,MAAM,CAAClB,GAAD;AANzD,SAAP;AASA,OAhBM,CAAP;AAiBA,KAxHmB;;AAGnB,UAAKoB,KAAL,GAAa;AACZ7B,MAAAA,cAAc,EAAE;AACfC,QAAAA,QAAQ,EAAE;AADK;AADJ,KAAb;AAHmB;AAQnB;;;;wCAEmB;AAAA,UAElBV,cAFkB,GAGf,KAAKK,KAHU,CAElBL,cAFkB;AAKnBA,MAAAA,cAAc,CAACuC,gBAAf;AACAvC,MAAAA,cAAc,CAACwC,WAAf;AACA;;;6BAyGS;AAAA,UAERT,WAFQ,GAGL,KAAK1B,KAHA,CAER0B,WAFQ;AAAA,UAMRtB,cANQ,GAOL,KAAK6B,KAPA,CAMR7B,cANQ;AAAA,UAUR+B,WAVQ,GAWLT,WAXK,CAURS,WAVQ;AAaT,UAAMC,KAAK,GAAGtC,WAAW,CAAC,KAAK0B,eAAL,CAAqBW,WAAW,CAACE,MAAjC,CAAD,EAA2CjC,cAA3C,CAAzB;AAEA,aACC;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,oBAAD;AACC,QAAA,YAAY,EAAE,KAAKH,kBADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,EAMC,oBAAC,iBAAD;AACC,QAAA,KAAK,EAAEmC,KADR;AAEC,QAAA,UAAU,EAAED,WAAW,CAACL,UAFzB;AAGC,QAAA,YAAY,EAAEpC,SAAS,CAACsB,MAAV,CAAiBsB,IAAjB,CAAsBC,mBAHrC;AAIC,QAAA,WAAW,EAAE,KAAKjC,2BAJnB;AAKC,QAAA,YAAY,EAAE,KAAKM,mBALpB;AAMC,QAAA,qBAAqB,EAAElB,SAAS,CAACsB,MAAV,CAAiBC,OAAjB,CAAyBuB,cANjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,CADD;AAiBA;;;;EA3JoCtD,S;;AA8JtC,IAAMuD,eAAe,GAAG,SAAlBA,eAAkB,CAACR,KAAD,EAAW;AAClC,SAAO;AACNP,IAAAA,WAAW,EAAEO,KAAK,CAACS;AADb,GAAP;AAGA,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAO;AACNjD,IAAAA,cAAc,EAAEF,kBAAkB,CAACE,cAAD,EAAiBiD,QAAjB,CAD5B;AAENhD,IAAAA,aAAa,EAAEH,kBAAkB,CAACG,aAAD,EAAgBgD,QAAhB,CAF3B;AAGN/C,IAAAA,mBAAmB,EAAEJ,kBAAkB,CAACI,mBAAD,EAAsB+C,QAAtB;AAHjC,GAAP;AAKA,CAND;;AAQA,eAAerD,OAAO,CACrBkD,eADqB,EAErBE,kBAFqB,CAAP,CAGb5C,uBAHa,CAAf","sourcesContent":["import React, {\n\tComponent\n} from 'react';\n\nimport {\n\tConversationsList\n} from 'entries/chat/containers';\n\nimport {\n\tInputSearchComponent\n} from 'entries/chat/components';\n\nimport {\n\tLabelComponent,\n\tButtonComponent\n} from 'shared/components';\n\nimport {\n\tconnect\n} from 'react-redux';\n\nimport {\n\tconfirmAlert\n} from 'react-confirm-alert';\n\nimport {\n\tbindActionCreators\n} from 'redux';\n\nimport constants from 'modules/constants';\nimport * as contactActions from 'redux/actions/contact';\nimport * as drawerActions from 'redux/actions/drawer';\nimport * as conversationActions from 'redux/actions/conversation';\n\nimport {\n\tsearchParam\n} from 'modules/utils';\n\nclass StartConversationDrawer extends Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcontactsSearch: {\n\t\t\t\tnickname: ''\n\t\t\t}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tcontactActions\n\t\t} = this.props;\n\n\t\tcontactActions.resetGetContacts();\n\t\tcontactActions.getContacts();\n\t}\n\n\thandleChangeSearch = (value) => {\n\t\tthis.setState({\n\t\t\tcontactsSearch: {\n\t\t\t\tnickname: value\n\t\t\t}\n\t\t});\n\t}\n\n\thandleClickConversationItem = (item) => {\n\t\tconst {\n\t\t\tdrawerActions,\n\t\t\tdrawerName,\n\t\t\tconversationActions\n\t\t} = this.props;\n\n\t\tconversationActions.setCurrentConversation({\n\t\t\tpartner: item\n\t\t});\n\n\t\tdrawerActions.closeDrawer(drawerName);\n\t}\n\n\thandleDeleteContact = (item) => {\n\t\tconst {\n\t\t\tcontactActions\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\t_id\n\t\t} = item;\n\n\t\tconfirmAlert({\n\t\t\tcustomUI: ({ onClose }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className='confirm-popup'>\n\t\t\t\t\t\t<LabelComponent\n\t\t\t\t\t\t\tfontSemiBold\n\t\t\t\t\t\t\ttext={constants.LABELS.CONTACT.DELETE_CONTACT_CONFIRM}\n\t\t\t\t\t\t\tfontSize={30}\n\t\t\t\t\t\t\talignCenter\n\t\t\t\t\t\t\tmargin=\"0px 0px 25px 0px\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='buttons-container'>\n\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tdefaultButton\n\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\ttext={constants.LABELS.MAIN.NO}\n\t\t\t\t\t\t\t\tmargin=\"10px\"\n\t\t\t\t\t\t\t\twidth={100}\n\t\t\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tdefaultButton\n\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\ttext={constants.LABELS.MAIN.YES}\n\t\t\t\t\t\t\t\tmargin=\"10px\"\n\t\t\t\t\t\t\t\twidth={100}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\tcontactActions.deleteContact({\n\t\t\t\t\t\t\t\t\t\tcontactId: _id\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetContactsData = (contacts) => {\n\t\tconst {\n\t\t\tcontactData\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tdeleteContact\n\t\t} = contactData;\n\n\t\treturn contacts.map(item => {\n\t\t\tconst {\n\t\t\t\tnickname,\n\t\t\t\tprofileColor,\n\t\t\t\t_id\n\t\t\t} = item;\n\n\t\t\treturn {\n\t\t\t\tnickname,\n\t\t\t\tprofileColor,\n\t\t\t\t_id,\n\t\t\t\tisFetchingAction: (\n\t\t\t\t\tdeleteContact.isFetching\n\t\t\t\t\t&& String(deleteContact.currentContactIdIsDeleting) === String(_id)\n\t\t\t\t)\n\t\t\t};\n\t\t});\n\t}\n\n\trender () {\n\t\tconst {\n\t\t\tcontactData\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tcontactsSearch\n\t\t} = this.state;\n\n\t\tconst {\n\t\t\tgetContacts\n\t\t} = contactData;\n\n\t\tconst items = searchParam(this.getContactsData(getContacts.result), contactsSearch);\n\n\t\treturn (\n\t\t\t<div className='start-conversation-drawer-wrapper'>\n\t\t\t\t<div>\n\t\t\t\t\t<InputSearchComponent\n\t\t\t\t\t\thandleChange={this.handleChangeSearch}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ConversationsList\n\t\t\t\t\titems={items}\n\t\t\t\t\tisFetching={getContacts.isFetching}\n\t\t\t\t\temptyMessage={constants.LABELS.CHAT.NO_CONTACTS_TO_SHOW}\n\t\t\t\t\tonClickItem={this.handleClickConversationItem}\n\t\t\t\t\tonDeleteItem={this.handleDeleteContact}\n\t\t\t\t\tdeleteDropDownMessage={constants.LABELS.CONTACT.DELETE_CONTACT}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcontactData: state.contact\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tcontactActions: bindActionCreators(contactActions, dispatch),\n\t\tdrawerActions: bindActionCreators(drawerActions, dispatch),\n\t\tconversationActions: bindActionCreators(conversationActions, dispatch)\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(StartConversationDrawer);\n"]},"metadata":{},"sourceType":"module"}