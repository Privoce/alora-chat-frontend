{"ast":null,"code":"import _classCallCheck from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _ from 'lodash';\nimport Emitter from './Emitter';\n/**\n * Manage all media devices\n */\n\nvar MediaDevice =\n/*#__PURE__*/\nfunction (_Emitter) {\n  _inherits(MediaDevice, _Emitter);\n\n  function MediaDevice() {\n    _classCallCheck(this, MediaDevice);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MediaDevice).apply(this, arguments));\n  }\n\n  _createClass(MediaDevice, [{\n    key: \"start\",\n\n    /**\n     * Start media devices and send stream\n     */\n    value: function start() {\n      var _this = this;\n\n      var constraints = {\n        video: {\n          facingMode: 'user',\n          height: {\n            min: 360,\n            ideal: 720,\n            max: 1080\n          }\n        },\n        audio: true\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        _this.stream = stream;\n\n        _this.emit('stream', stream);\n      }).catch(function (err) {\n        if (err instanceof DOMException) {\n          alert('Cannot open webcam and/or microphone');\n        } else {\n          console.log(err);\n        }\n      });\n      return this;\n    }\n    /**\n     * Turn on/off a device\n     * @param {String} type - Type of the device\n     * @param {Boolean} [on] - State of the device\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(type, on) {\n      var len = arguments.length;\n\n      if (this.stream) {\n        this.stream[\"get\".concat(type, \"Tracks\")]().forEach(function (track) {\n          var state = len === 2 ? on : !track.enabled;\n\n          _.set(track, 'enabled', state);\n        });\n      }\n\n      return this;\n    }\n    /**\n     * Stop all media track of devices\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.stream) {\n        this.stream.getTracks().forEach(function (track) {\n          return track.stop();\n        });\n      }\n\n      return this;\n    }\n  }]);\n\n  return MediaDevice;\n}(Emitter);\n\nexport default MediaDevice;","map":{"version":3,"sources":["/home/tulio/Documentos/projetosJs/privoce/react-socketio-nodejs-chatapp/client/src/modules/utils/MediaDevice.js"],"names":["_","Emitter","MediaDevice","constraints","video","facingMode","height","min","ideal","max","audio","navigator","mediaDevices","getUserMedia","then","stream","emit","catch","err","DOMException","alert","console","log","type","on","len","arguments","length","forEach","track","state","enabled","set","getTracks","stop"],"mappings":";;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;;;IAGMC,W;;;;;;;;;;;;;;AACL;;;4BAGQ;AAAA;;AACP,UAAMC,WAAW,GAAG;AACnBC,QAAAA,KAAK,EAAE;AACNC,UAAAA,UAAU,EAAE,MADN;AAENC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,GAAG,EAAE,GAAP;AAAYC,YAAAA,KAAK,EAAE,GAAnB;AAAwBC,YAAAA,GAAG,EAAE;AAA7B;AAFF,SADY;AAKnBC,QAAAA,KAAK,EAAE;AALY,OAApB;AAQAC,MAAAA,SAAS,CAACC,YAAV,CACEC,YADF,CACeV,WADf,EAEEW,IAFF,CAEO,UAAAC,MAAM,EAAI;AACf,QAAA,KAAI,CAACA,MAAL,GAAcA,MAAd;;AACA,QAAA,KAAI,CAACC,IAAL,CAAU,QAAV,EAAoBD,MAApB;AACA,OALF,EAMEE,KANF,CAMQ,UAAAC,GAAG,EAAI;AACb,YAAIA,GAAG,YAAYC,YAAnB,EAAiC;AAChCC,UAAAA,KAAK,CAAC,sCAAD,CAAL;AACA,SAFD,MAEO;AACNC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA;AACD,OAZF;AAcA,aAAO,IAAP;AACA;AAED;;;;;;;;2BAKOK,I,EAAMC,E,EAAI;AAChB,UAAMC,GAAG,GAAGC,SAAS,CAACC,MAAtB;;AACA,UAAI,KAAKZ,MAAT,EAAiB;AAChB,aAAKA,MAAL,cAAkBQ,IAAlB,eAAkCK,OAAlC,CAA0C,UAAAC,KAAK,EAAI;AAClD,cAAMC,KAAK,GAAGL,GAAG,KAAK,CAAR,GAAYD,EAAZ,GAAiB,CAACK,KAAK,CAACE,OAAtC;;AACA/B,UAAAA,CAAC,CAACgC,GAAF,CAAMH,KAAN,EAAa,SAAb,EAAwBC,KAAxB;AACA,SAHD;AAIA;;AACD,aAAO,IAAP;AACA;AAED;;;;;;2BAGO;AACN,UAAI,KAAKf,MAAT,EAAiB;AAChB,aAAKA,MAAL,CAAYkB,SAAZ,GAAwBL,OAAxB,CAAgC,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACK,IAAN,EAAJ;AAAA,SAArC;AACA;;AACD,aAAO,IAAP;AACA;;;;EAtDwBjC,O;;AAyD1B,eAAeC,WAAf","sourcesContent":["import _ from 'lodash';\nimport Emitter from './Emitter';\n\n/**\n * Manage all media devices\n */\nclass MediaDevice extends Emitter {\n\t/**\n\t * Start media devices and send stream\n\t */\n\tstart() {\n\t\tconst constraints = {\n\t\t\tvideo: {\n\t\t\t\tfacingMode: 'user',\n\t\t\t\theight: { min: 360, ideal: 720, max: 1080 }\n\t\t\t},\n\t\t\taudio: true\n\t\t};\n\n\t\tnavigator.mediaDevices\n\t\t\t.getUserMedia(constraints)\n\t\t\t.then(stream => {\n\t\t\t\tthis.stream = stream;\n\t\t\t\tthis.emit('stream', stream);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err instanceof DOMException) {\n\t\t\t\t\talert('Cannot open webcam and/or microphone');\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Turn on/off a device\n\t * @param {String} type - Type of the device\n\t * @param {Boolean} [on] - State of the device\n\t */\n\ttoggle(type, on) {\n\t\tconst len = arguments.length;\n\t\tif (this.stream) {\n\t\t\tthis.stream[`get${type}Tracks`]().forEach(track => {\n\t\t\t\tconst state = len === 2 ? on : !track.enabled;\n\t\t\t\t_.set(track, 'enabled', state);\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop all media track of devices\n\t */\n\tstop() {\n\t\tif (this.stream) {\n\t\t\tthis.stream.getTracks().forEach(track => track.stop());\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport default MediaDevice;\n"]},"metadata":{},"sourceType":"module"}